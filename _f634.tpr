/*
Дата последнего измененения: 05.04.2006 
Разработчик: Диасофт.
Последнее изменение: Досин П.Г.
Комментарий: Доработано некорректное округление графы 10 по заявке 103014


Модификации:
Автор: Маслюхин А.Ф. (MAF)
Дата изменения: 18.07.2007
1 В режиме расшифровки для "Ячейка" = "рез" теперь попадают счета 45815
2 Для счетов 45509 и 45815 сумма расчитывается из финансовых показателей
3 В режим расшифровки добавлен столбец портфель

Автор: Сапронов Н.Г.
Дата изменения: 05.09.2007
Изменения: Добавлен отбор счетов 91307

Автор: Колесников Д.В.
Дата изменения: 12.09.2007
Изменения: В печатной форме убрана графа 4 "в том числе резервы на возможные потери"

Автор: Колесников Д.В. (KDV)
Дата изменения: 27.12.2007
Изменения: 

Автор: Маслюхин А.Ф. (MAF)
Дата изменения: 17.06.2008
Изменения: из Фин показателей берем остатки по счетам 45918 47425 в резервы

Автор: Щеголев С. А.
Дата изменения: 29.09.2008
Проведена оптимизация по запросу P068.T0341 SD325,447 ORD3,106
*/

--select * from tDocMark where SPID = @@SPID
--select * from #Guarantee where ResourceID = 10002374451
--select * from #Classifier where ResourceID = 10002374451
--select * from tResource where Brief = '47425810000100009758'
--select * from #Guarantee where ResourceID = 10002399679
--select * from #Classifier where ResourceID = 10002435080
--select * from #ResourceRBR where ResourceID = 10000793287
--select * from #Resource where ResourceID = 10000014841
--select * from tResource where Brief = '91305840000000000044'
--select * from #Classifier where ResourceID = 10000134088

/*
 --------------запрос--------------------
declare @ResourceID numeric(15,0)
select  @ResourceID = r.ResourceID
  from tResource r
 where r.Brief = '91305840200000000202'
 
select * from #Guarantee where ResourceID = @ResourceID
return
---------------------------------------- 
*/

[SQL]

@TBL@=SQL{

create table #Resultat(
                      ID          numeric(15,0) identity,
                      ResourceID  numeric(15,0) null, 
                      ObjectBrief varchar(20) null,    --балансовый счет + валюта или лицевой счет
                      Position    varchar(3) null,     --позиция формы
                      SecNumber   varchar(3) null,     --номер валюты
                      SecBrief    varchar(25) null,    --сокращение валюты
                      SecurityID  numeric(15,0) null,  --идентификатор валюты
                      Summe       money null,          --сумма, включаемая в отчет
                      Direction   varchar(3),          --Поз, Рез, ИнР - положение в ячейке
                      Portfolio   varchar(3) null      --портфель --18.07.2007 MAF 
                      )


create table #Balance(
                     ID           numeric(15,0) identity,
                     ResourceID   numeric(15,0),
                     DomainID     numeric(15,0), --идентификатор области учета
                     FundID       numeric(15,0), --валюта
                     BalanceOutDE money,         --дебетовый исходящий остаток (руб.)
                     BalanceOutCE money          --кредитовый исходящий остаток (руб.)
                     )
                     
create table #Classifier(
                        ResourceID numeric(15,0), -- лицевые счета резервов под проклассифицированными балансовыми
                        Comment    varchar(2),    -- примечание для резервов и аккредитивов
                        Type       tinyint        -- 1 - резервы
                                                  -- 2 - счета неполученных процентов
                                                  -- 3 - гарантии
                                                  -- 4 - аккредитивы
                        )
create index XPKClassifier on #Classifier(Type, ResourceID)                         
                      
create table #Resource(
                      ResourceID   numeric(15,0),  --лицевой счет
                      CharType     tinyint,        --признак активный/пассивный
                      Position     varchar(3),     --позиция формы 
                      SecurityID   numeric(15,0),  --валюта
                      Summe        money,          --сумма в валюте SecNumber
                      Type         tinyint         --1 - проклассифицированные счета резервов
                                                   --2 - элементы РБР
                                                   --3 - исключать
                                                   --4 - иные активы - пассивы в рублях
                                                   --6 - опционы
                                                   --7 - инвертировать
                                                   
                      )
                      
create index XPKResource on #Resource(Type, ResourceID)                      
                      
create table #ResourceRBR(
                         ResourceID       numeric(15,0), --лицевой счет резерва
                         DateBegin        smalldatetime, --дата начала действия состояния портфеля резерва
                         ReserveToForming money,         --сформированный резерв                             
                         SecurityID       numeric(15,0),
                         Type             tinyint        --1 - объект - счет
                                                         --2 - объект - сделка
                         )
                         
create table #Reste(
                    ResourceID       numeric(15,0),
                    SecurityID       numeric(15,0),
                    ReserveToForming money,
                    DateBegin        smalldatetime
                    )
                   
create table #Impure(
                    ResourceID       numeric(15,0), --лицевой счет 
                    InstOwnerID      numeric(15,0), --владелец счета
                    Type             tinyint        --1 - ссудные счета
                                                    --2 - счета резервов
                    )
-- select * from #Classifier where ResourceID = 10001653811                   
create table #ImpureClient(
                          InstitutionID numeric(15,0), --заемщик
                          )
create table #ImpureRests(
                         InstitutionID    numeric(15,0),                                                   
                         RestBs           money,      --сумма приведенных остатков по ссудным счетам
                         Rest             money       --сумма остатков по счетам резервов
                         )
--select * from #ImpureRests where InstitutionID = 10000109232                         
create table #ImpureRBR(
                       InstitutionID       numeric(15,0),                         
                       ReserveToForming money,      --сумма значений "резерв к формированию"
                       Base             money       --сумма значений "рассчетная база резервирования"
                       )
                       
--select * from #ImpureRBR where InstitutionID = 10000109232                       

create table #ImpurePOS(
                       InstitutionID  numeric(15,0),                       
                       IsPOS          tinyint       --входит ли в портфель однородных ссуд
                       ) 
--select * from #ImpurePOS where InstitutionID = 10000109232
                    
create table #Exclude(                        --исключаемые счета
                     ResourceID numeric(15,0),
                     Type       tinyint       --1 - балансовая
                                              --2 - спот 
                                              --3 - срочная
                     )
                     
create table #Guarantee(
                       ResourceID       numeric(15,0), --лицевой счет 
                       DateBegin        smalldatetime, --дата последнего начисления                  
                       ReserveToForming money,         --сформированный резерв                             
                       Base             money,         --рассчетная база резервирования
                       Rest             money,
                       FundID           numeric(15,0)  --валюта счета
                       )
create table #Branch(
                    BranchID numeric(15,0)
                    )                       
                                              
                                                                                                                                                           
--- Таблицы, добавленные для расчета по загруженным в фин. показатели счетам учета резервов
create table #FinPok(ExpID  numeric(15,0)
                    ,Number varchar(20)
                    ,Brief  varchar(20)
                    ,Rest   money
                    ,Flag   int    -- 1 - ссудные, 2 - резервы, 3 - не полученные проценты по кредитам, 4 - гарантии
                    ,PrcRes float        null
                    ,FundID numeric(15,0)
                     )
create index i1 on #FinPok(ExpID)
create index i2 on #FinPok(Number, Flag)

create table #IsIntResource(ResourceID numeric(15,0)
                            )
create index r1 on #IsIntResource(ResourceID)

create table #AccForProcess(ResourceID numeric(15,0)
                           ,Brief      varchar(20)
                           ,FundID     numeric(15,0)
                           ,RegTemp    int
                           ,Rest       money
                           ,ResToUse   money   null -- для расчета 11й колонки
                            )

create table #CardRVPS(ResourceID numeric(15,0)
                      ,Brief      varchar(20)
                      ,FundID     numeric(15,0)
                      ,Rest       money
                      ,Portfolio  varchar(3)    --18.07.2007 MAF 
                       )

select 'tbl'
}

@REPF@=SQL{

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint
        
 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

 select @Date    as Date,
        @Date    as DateCap,
        @Capital as Capital,
        @Branch  as Branch,
        @Reg6    as Reg6,
        @Reg3    as Reg3,
        @Reg4    as Reg4,
        @Reg5    as Reg5,
        @Del232  as Del232,
        @Svod    as Svod

}

@SQL1@=SQL{

--рассчитываем суммы по балансу

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR
        
 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!
        
select @DateStr = convert(char(8), @Date, 112)
 --select @Date = dateadd(dd,-1, @Date)
--select * from #Branch 
--отбираем филиалы


if @Branch<>0
begin

insert #Branch values (@Branch)
end

else

begin

insert #Branch
select ID
  from tDocMark dm #M_NOLOCK_INDEX(XPKtDocMark)
 where 1=1
   and dm.SPID = @@SPID
   and dm.Type = 41
   
delete tDocMark from tDocMark where SPID = @@SPID and Type = 1

update tDocMark
   set Type = 1
 where SPID = @@SPID
   and Type = 41
      
end                        

if not exists (select 1 from #Branch)
insert #Branch values (2000)
        
--рассчитываем неприведенный баланс по всем валютам области "А"

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47
#M_ISOLAT 
 
delete from pBalance where SPID = @@SPID 
 
#M_FORCEPLAN_OFF

if @Branch <> 0

 exec CalcRoundBalance 
      @ResourceID = @A,
      @BegDate    = @Date,
      @EndDate    = @Date,
      @FlagFund   = 3,
      @FlagBranch = 0,
      @BranchID   = @Branch
      
else 

 exec CalcRoundBalance 
      @ResourceID = @A,
      @BegDate    = @Date,
      @EndDate    = @Date,
      @FlagFund   = 3,
      @FlagBranch = 2
            
#M_FORCEPLAN

insert #Balance(
               ResourceID,  
               DomainID,    
               FundID,      
               BalanceOutDE,
               BalanceOutCE
               )
select distinct b.ResourceID,
                @A,
                b.FundID,
                b.BalanceOutDE,
                b.BalanceOutCE
  from pBalance  b  #M_NOLOCK_INDEX(i1),
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where b.SPID       =  @@SPID
   and b.FundID     <> 2
   and s.CurrencyID =  b.FundID
#M_FORCEORDER  

-- рассчитываем неприведенный баланс по всем валютам области "Г"

delete from pBalance where SPID = @@SPID 
   
declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г

#M_FORCEPLAN_OFF

if @Branch <> 0

  exec CalcRoundBalance 
       @G,
       @Date,
       @Date,
       @FlagFund   = 3,
       @FlagBranch = 0,
       @BranchID   = @Branch
       
else 

  exec CalcRoundBalance 
       @G,
       @Date,
       @Date,
       @FlagFund   = 3,
       @FlagBranch = 2       
       
#M_FORCEPLAN
--select * from #Balance
insert #Balance(
               ResourceID,  
               DomainID,    
               FundID,     
               BalanceOutDE,
               BalanceOutCE
               )
select distinct b.ResourceID,
                @G,
                b.FundID,
                b.BalanceOutDE,
                b.BalanceOutCE
  from pBalance  b  #M_NOLOCK_INDEX(i1),
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where b.SPID       =  @@SPID
   and b.FundID     <> 2
   and s.CurrencyID =  b.FundID
#M_FORCEORDER  

--рассчитываем неприведенный баланс по области "В"

delete from pBalance where SPID = @@SPID 

declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В

#M_FORCEPLAN_OFF

if @Branch <> 0
 
exec CalcRoundBalance 
     @W,
     @Date,
     @Date,
     @FlagFund   = 3,
     @FlagBranch = 0,
     @BranchID   = @Branch
     
else 

exec CalcRoundBalance 
     @W,
     @Date,
     @Date,
     @FlagFund   = 3,
     @FlagBranch = 2     
     
#M_FORCEPLAN     
     
insert #Balance(
               ResourceID,  
               DomainID,    
               FundID,      
               BalanceOutDE,
               BalanceOutCE
               )
select distinct b.ResourceID,
                @W,
                b.FundID,
                b.BalanceOutDE,
                b.BalanceOutCE
  from pBalance  b  #M_NOLOCK_INDEX(i1),
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where b.SPID       =  @@SPID
   and b.FundID     <> 2
   and s.CurrencyID =  b.FundID
#M_FORCEORDER    
   
select 1
                         
}      
       
@SQL2@=SQL{


#M_FORCEPLAN

declare @Date     smalldatetime,
        @DateCap  smalldatetime,
        @Capital  float,
        @Branch   numeric(15,0),
        @Reg3     tinyint,
        @Reg4     tinyint,
        @Reg5     tinyint,
        @Reg6     tinyint,
        @Reg7     tinyint,
        @Del232   tinyint,
        @Svod     tinyint,
        @DateStr  DSDAY_STR,
        @EndMonth DSOPERDAY

-- новые переменные
declare @FP634ID numeric(15,0)
---------------------------
        
 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Reg6    = %Reg6!,
        @Reg7    = %Reg7!,
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
 --select @Date = dateadd(dd,-1, @Date)

--определим дату курса ЦБ
if @Reg7 = 1
begin
  -- Последняя рабочая дата месяца
  select @EndMonth = convert(varchar, datepart(yy, dateadd(mm, 1, @Date))) + 
                     right('0' + convert(varchar, datepart(mm, dateadd(mm, 1, @Date))), 2) + 
                     '01'
  select @EndMonth = dateadd(dd, -1, @EndMonth)                  
  
  exec DateCorrectByCln
         @DateResult    = @EndMonth output,
         @DateInit      = @EndMonth,
         @CalendarID    = 2,
         @Direction     = -1,
         @EnableDirection = 0
  
  if @Date <= @EndMonth 
  begin
    --берем последнюю рабочую дату предидущего месяца
    select @EndMonth = convert(varchar, datepart(yy, @Date)) + 
                       right('0' + convert(varchar, datepart(mm, @Date)), 2) + 
                       '01'
    select @EndMonth = dateadd(dd, -1, @EndMonth)                  
  
    exec DateCorrectByCln
              @DateResult    = @EndMonth output,
              @DateInit      = @EndMonth,
              @CalendarID    = 2,
              @Direction     = -1,
              @EnableDirection = 0
  end
end
else
  select @EndMonth = @Date

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--резервы
--select * from #Classifier where ResourceID = 10000014841
insert #Classifier(
                  ResourceID,
                  Comment,
                  Type
                  )
select rb.ChildID,
       ltrim(rtrim(ocr.Comment)),
       1
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResourceBind   rb  #M_NOLOCK_INDEX(XIE3tResourceBind),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b
 where 1=1
   and ocr.ObjClassifierID = @634ReserveS
   and ocr.ObjType         = 3
   and rb.ParentID         = ocr.ObjectID
   and rb.ChildResType     = 1
   and r.ResourceID        = rb.ChildID
   and r.InstitutionID     = b.BranchID
   and r.DateStart        <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)
#M_FORCEORDER

--удаляем счета по 232-П если проставлен крыж

if @Del232 = 1

begin
delete #Classifier
  from #Classifier #M_NOLOCK_INDEX(XPKClassifier),
       tResource r #M_NOLOCK_INDEX(XPKtResource)
 where #Classifier.Type       = 1
   and #Classifier.Comment    = '2'
   and r.ResourceID           = #Classifier.ResourceID
   and r.BalanceID            = @W  
end

--счета неполученных процентов

insert #Classifier(
                  ResourceID,
                  Comment,
                  Type
                  )
select rb.ChildID,
       '0',
       2
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResourceBind   rb  #M_NOLOCK_INDEX(XIE3tResourceBind),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b
 where 1=1
   and ocr.ObjClassifierID = @634ImpureS
   and ocr.ObjType         = 3
   and rb.ParentID         = ocr.ObjectID
   and rb.ChildResType     = 1
   and r.ResourceID        = rb.ChildID
   and r.FundID           <> 2 --только валютные
   and r.InstitutionID     = b.BranchID
   and r.DateStart        <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)

#M_FORCEORDER
--select * from #Classifier
--гарантии

insert #Classifier(
                  ResourceID,
                  Comment,
                  Type
                  )
select rb.ChildID,
       '0',
       3
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResourceBind   rb  #M_NOLOCK_INDEX(XIE3tResourceBind),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b
 where 1=1
   and ocr.ObjClassifierID = @634GuaranteeS
   and ocr.ObjType         = 3
   and rb.ParentID         = ocr.ObjectID
   and rb.ChildResType     = 1
   and r.ResourceID        = rb.ChildID
   and r.InstitutionID     = b.BranchID
   and r.DateStart        <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)
#M_FORCEORDER

--аккредитивы

insert #Classifier(
                  ResourceID,
                  Comment,
                  Type
                  )
select rb.ChildID,
       case when isnull(ltrim(rtrim(ocr.Comment)),'') = ''
            then '1'
            else ltrim(rtrim(ocr.Comment))
       end,
       4                     
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResourceBind   rb  #M_NOLOCK_INDEX(XIE3tResourceBind),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b 
 where 1=1
   and ocr.ObjClassifierID = @634AkkreditivS
   and ocr.ObjType         = 3
   and rb.ParentID         = ocr.ObjectID
   and rb.ChildResType     = 1
   and r.ResourceID        = rb.ChildID
   and r.FundID           <> 2
   and r.InstitutionID     = b.BranchID
   and r.DateStart        <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)   
#M_FORCEORDER   
              
--отбираем проклассифицированные лицевые счета 

declare @634Reserve numeric(15,0)
 select @634Reserve = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Analytic
    and oc.Brief            = 'Резервы'
#M_ISOLAT

--резервы 

--select * from #Resource where ResourceID = 10000014841

insert #Resource(
                ResourceID,
                CharType,       --все счета резервов - пассивные
                Position, 
                SecurityID, 
                Summe,    --если 0, будем брать остаток на счете, приведенный к валюте
                Type
                )
----------------------------------                
/*declare @Date smalldatetime
select  @Date = '20060302'

declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT

declare @634Reserve numeric(15,0)
 select @634Reserve = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Analytic
    and oc.Brief            = 'Резервы'
#M_ISOLAT*/    
----------------------------------

select ocr.ObjectID,
       2,
       substring(ltrim(rtrim(ocr.Comment)),1,3),
       s.CurrencyID,
       case when isnull(substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6),'')=''
            then 0
            else convert(money,substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6))

       end,
       1
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       #Classifier     c   #M_NOLOCK_INDEX(XPKClassifier),
       tCurrency       s   #M_NOLOCK_INDEX(XIE1tCurrency)
 where ocr.ObjClassifierID       = @634Reserve             
   and ocr.ObjType               = 3
   and ocr.OnDate                = (select max(OnDate)
                                      from tObjClsRelation ocr1 #M_NOLOCK_INDEX(XIE1tObjClsRelation)
                                     where 1=1
                                       and ocr1.ObjType                     = 3
                                       and ocr1.ObjectID                    = ocr.ObjectID
                                       and ocr1.ObjClassifierID             = @634Reserve             
                                       and isnull(ocr1.OnDate,'19000101')  <= @Date
                                   )   
   and c.Type                    = 1
   and c.ResourceID              = ocr.ObjectID
   and ltrim(rtrim(s.Number)) = substring(ltrim(rtrim(ocr.Comment)),4,3)

--отбираем счета, проклассифицированные рубрикой "Исключать"

declare @634Exclude numeric(15,0)
 select @634Exclude = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Analytic                     
    and oc.Brief            = 'Исключить'
#M_ISOLAT

insert #Resource(
                ResourceID,
                CharType,
                Position, 
                SecurityID, 
                Summe,    --если 0, будем брать остаток на счете, приведенный к валюте
                Type
                )
select ocr.ObjectID,
       r.CharType,
       substring(ltrim(rtrim(ocr.Comment)),1,3),
       s.CurrencyID,
       case when isnull(substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6),'')=''
            then 0
            else convert(money,substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6))

       end,
       3
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tCurrency       s   #M_NOLOCK_INDEX(XIE1tCurrency),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b
 where ocr.ObjClassifierID       = @634Exclude             
   and ocr.ObjType               = 3
   and ltrim(rtrim(s.Number))    = substring(ltrim(rtrim(ocr.Comment)),4,3)   
   and r.ResourceID              = ocr.ObjectID
   and r.InstitutionID           = b.BranchID
   and r.DateStart              <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)
   
--отбираем счета, проклассифицированные рубрикой "Иные активы/пассивы"

declare @634Other numeric(15,0)
 select @634Other = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Analytic                     
    and oc.Brief            = 'ИнАктПасс'
#M_ISOLAT

insert #Resource(
                ResourceID,
                CharType,
                Position, 
                SecurityID, 
                Summe,    --если 0, будем брать остаток на счете, приведенный к валюте
                Type
                )
select ocr.ObjectID,
       r.CharType,
       substring(ltrim(rtrim(ocr.Comment)),1,3),
       s.CurrencyID,
       case when isnull(substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6),'')=''
            then 0
            else convert(money,substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6))

       end,
       4
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tCurrency       s   #M_NOLOCK_INDEX(XIE1tCurrency),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b
 where ocr.ObjClassifierID       = @634Other             
   and ocr.ObjType               = 3
   and ocr.OnDate                = (select max(OnDate)
                                      from tObjClsRelation ocr1 #M_NOLOCK_INDEX(XIE1tObjClsRelation)
                                     where 1=1
                                       and ocr1.ObjType                     = 3
                                       and ocr1.ObjectID                    = ocr.ObjectID
                                       and ocr1.ObjClassifierID             = @634Other             
                                       and isnull(ocr1.OnDate,'19000101')  <= @Date
                                   )
   and ltrim(rtrim(s.Number)) = substring(ltrim(rtrim(ocr.Comment)),4,3)   
   and r.ResourceID              = ocr.ObjectID
   and r.InstitutionID           = b.BranchID   
   and r.DateStart              <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)
   
--проклассифицированные опционы

declare @634Option numeric(15,0)
 select @634Option = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Analytic                     
    and oc.Brief            = 'Опционы'
#M_ISOLAT

insert #Resource(
                ResourceID,
                CharType,
                Position, 
                SecurityID, 
                Summe,    --если 0, будем брать остаток на счете, приведенный к валюте
                Type
                )
select ocr.ObjectID,
       r.CharType,
       substring(ltrim(rtrim(ocr.Comment)),1,3),
       s.CurrencyID,
       case when isnull(substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6),'')=''
            then 0
            else convert(money,substring(ltrim(rtrim(ocr.Comment)),7,datalength(ltrim(rtrim(ocr.Comment)))-6))

       end,
       6
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tCurrency       s   #M_NOLOCK_INDEX(XIE1tCurrency),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b 
 where ocr.ObjClassifierID       = @634Option
   and ocr.ObjType               = 3
   and ocr.OnDate                = (select max(OnDate)
                                      from tObjClsRelation ocr1 #M_NOLOCK_INDEX(XIE1tObjClsRelation)
                                     where 1=1
                                       and ocr1.ObjType                     = 3
                                       and ocr1.ObjectID                    = ocr.ObjectID
                                       and ocr1.ObjClassifierID             = @634Option             
                                       and isnull(ocr1.OnDate,'19000101')  <= @Date
                                   )   
   and ltrim(rtrim(s.Number))    = substring(ltrim(rtrim(ocr.Comment)),4,3)   
   and r.ResourceID              = ocr.ObjectID
   and r.InstitutionID           = b.BranchID
   and r.DateStart              <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)
   
--инвертировать

declare @634Invert numeric(15,0)
 select @634Invert = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Analytic                     
    and oc.Brief            = 'Инвертировать'
#M_ISOLAT

insert #Resource(
                ResourceID,
                CharType,
                Position, 
                SecurityID, 
                Summe,    
                Type
                )
select ocr.ObjectID,
       r.CharType,
       '',
       r.FundID,
       0,
       7
  from tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource),
       #Branch         b 
 where ocr.ObjClassifierID       = @634Invert
   and ocr.ObjType               = 3
   and r.ResourceID              = ocr.ObjectID
   and r.InstitutionID           = b.BranchID
   and r.DateStart              <= @Date
   and (r.DateEnd = '19000101' or r.DateEnd > @Date)
   
--для счетов полученных гарантий

insert #Guarantee(
                 ResourceID,      
                 DateBegin,
                 ReserveToForming,
                 Base,            
                 Rest,
                 FundID            
                 )                              

                  
select c.ResourceID,
       max(rpeh.DateBegin),
       isnull(sum(rpeh.ReserveToForming),0),
       isnull(nullif(sum(rpeh.Base),0),1),
       0,
       max(r.FundID)
  from #Classifier        c    #M_NOLOCK_INDEX(XPKClassifier),
       tResource          r    #M_NOLOCK_INDEX(XPKtResource),
       tWarAccountLink    al   #M_NOLOCK_INDEX(XIE4tWarAccountLink),
       tTypeAccLink       ta   #M_NOLOCK_INDEX(XPKtInstrAccLink),
       tWarObjectRelation dr   #M_NOLOCK_INDEX(XIE0tWarObjectRelation),
       tRPElement         rpe  #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory  rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       tResource          r1   #M_NOLOCK_INDEX(XPKtResource),
       #Classifier        c1   #M_NOLOCK_INDEX(XPKClassifier)
 where c.Type             = 3
   and r.ResourceID       = c.ResourceID
   and substring(r.Brief,1,5) <> '91404' --
   and al.ResourceID      = r.ResourceID
   and ta.TypeAccLinkID   = al.RuleID
   and ta.RelType         in (3,1) 
   and dr.ChildID         = al.ObjectID
   and dr.RelType         = 55
   and rpe.ObjectID       = dr.ParentID
   and (rpe.Flag & 32     = 0 
    or rpe.DateClose     >= @Date)
   and rpe.Flag & 4       = 0 
   and rpeh.RPElementID   = rpe.RPElementID
   and @Date             >= rpeh.DateBegin 
   and (@Date             < rpeh.DateEnd
    or rpeh.DateEnd       = '19000101')
   and r1.ResourceID       = rpeh.AccountID
   and (@Del232           = 0
    or r1.Brief not like '47425\%')
   and c1.Type           <> 2    
   and c1.ResourceID      = rpeh.AccountID
   and not exists (select 1
                     from #Resource rc #M_NOLOCK_INDEX(XPKResource)
                    where rc.Type       = 4
                      and rc.ResourceID = c.ResourceID)

group by c.ResourceID

union 
    
select c.ResourceID,
       max(rpeh.DateBegin),
       isnull(sum(rpeh.ReserveToForming),0),
       isnull(nullif(sum(rpeh.Base),0),1),
       0,
       max(r.FundID)    
  from #Classifier        c    #M_NOLOCK_INDEX(XPKClassifier),
       tResource          r    #M_NOLOCK_INDEX(XPKtResource),
       tWarAccountLink    al   #M_NOLOCK_INDEX(XIE4tWarAccountLink),
       tTypeAccLink       ta   #M_NOLOCK_INDEX(XPKtInstrAccLink),
       tWarrantyContent   wc   #M_NOLOCK_INDEX(XPKtWarrantyContent),
       tWarrantyRelation  wr   #M_NOLOCK_INDEX(XAK1tWarrantyRelation),
       tWarObjectRelation dr   #M_NOLOCK_INDEX(XIE0tWarObjectRelation),
       tRPElement         rpe  #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory  rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       tResource          r1   #M_NOLOCK_INDEX(XPKtResource),
       #Classifier        c1   #M_NOLOCK_INDEX(XPKClassifier)
 where c.Type                 = 3
   and r.ResourceID           = c.ResourceID
--   and r.ResourceID           = 10002374451
   and substring(r.Brief,1,5) <> '91404' --
   and al.ResourceID          = r.ResourceID
   and ta.TypeAccLinkID       = al.RuleID
   and ta.RelType            in (3,1)
   and wc.WarrantyCntID       = al.ObjectID
   and wr.WarrantyCntID       = wc.WarrantyCntID
   and dr.ChildID             = wr.DealID
   and rpe.ObjectID           = dr.ParentID
   and (rpe.Flag & 32         = 0 
    or rpe.DateClose         >= @Date)
   and rpe.Flag & 4           = 0 
   and rpeh.RPElementID       = rpe.RPElementID
   and @Date                 >= rpeh.DateBegin 
   and (@Date                 < rpeh.DateEnd
    or rpeh.DateEnd           = '19000101')
   and r1.ResourceID       = rpeh.AccountID
   and (@Del232           = 0
    or r1.Brief not like '47425\%')    
   and c1.Type               <> 2     
   and c1.ResourceID          = rpeh.AccountID
   and not exists (select 1
                     from #Resource rc #M_NOLOCK_INDEX(XPKResource)
                    where rc.Type       = 4
                      and rc.ResourceID = c.ResourceID)   
 
group by c.ResourceID

union --связь с резервами через связанные счета для обеспечения аккредитивов

select c.ResourceID,
       max(rpeh.DateBegin),
       isnull(sum(rpeh.ReserveToForming),0),
       isnull(nullif(sum(rpeh.Base),0),1),
       0,
       max(r.FundID)    
  from #Classifier       c     #M_NOLOCK_INDEX(XPKClassifier),
       tResource         r     #M_NOLOCK_INDEX(XPKtResource),
       tInstAccount      ia    #M_NOLOCK_INDEX(XAK1tInstAccount),
       tRPElement        rpe   #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory rpeh  #M_NOLOCK_INDEX(XAK1tRPElementHistory)
 where 1=1
   and c.Type                 = 3
   and r.ResourceID           = c.ResourceID
   and substring(r.Brief,1,5) <> '91404' 
   and ia.ResourceID          = r.ResourceID
   and ia.AccType             = 18 -- тип связи "Резерв155"
   and rpe.ObjectID           = ia.ResBenefID 
   and (rpe.Flag & 32         = 0 
    or rpe.DateClose         >= @Date)
   and rpe.Flag & 4           = 0 
   and rpeh.RPElementID       = rpe.RPElementID
   and @Date                 >= rpeh.DateBegin 
   and (@Date                 < rpeh.DateEnd
    or rpeh.DateEnd           = '19000101')
   and not exists (select 1
                     from #Resource rc #M_NOLOCK_INDEX(XPKResource)
                    where rc.Type       = 4
                      and rc.ResourceID = c.ResourceID)   
   
group by c.ResourceID

    
--для непроклассифицированных счетов резервов - элементы РБР         
                   
--если элемент - счет 

/*declare @Date smalldatetime
select  @Date = '20060219'
declare @Del232 tinyint
select  @Del232 = 0
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В*/
                 
                   
insert #ResourceRBR(
                   ResourceID,
                   DateBegin,
                   ReserveToForming,
                   SecurityID,
                   Type
                   )
                   
                                        
select rpeh.AccountID,
       rpeh.DateBegin,
       sum(isnull(rpeh.ReserveToForming,0)),
       r.FundID,
       1  
  from tRPElement        rpe  ,
       tRPElementHistory rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       #Classifier       c    #M_NOLOCK_INDEX(XPKClassifier),
       tResource         r    #M_NOLOCK_INDEX(XPKtResource)
 where 1=1
   and rpe.ObjectTypeID   = 1
   and (rpe.Flag & 32     = 0 
    or rpe.DateClose      > @Date)
   and rpe.Flag & 4       = 0    
   and rpe.RPElementID    = rpeh.RPElementID 
   and @Date             >= rpeh.DateBegin 
   and (@Date             < rpeh.DateEnd
    or rpeh.DateEnd       = '19000101')
   and c.Type             = 1    
   and rpeh.AccountID     = c.ResourceID
--   and c.ResourceID       = 10000843685
   and r.ResourceID       = rpe.ObjectID
   and (r.FundID          <> 2
    or exists (select 1
                 from #Resource         rc                                 
                where r.ResourceID      = rc.ResourceID
                  and rc.Type      in (1,4,6)
              )
       )
   and (r.BalanceID       <> @W
    or @Del232            = 0)
   and not exists (select 1
                     from #Resource rs #M_NOLOCK_INDEX(XPKResource)
                    where rs.Type       = 1
                      and rs.ResourceID = rpeh.AccountID)       
group by rpeh.AccountID, r.FundID, rpeh.DateBegin 
                  
--select * from #ResourceRBR where ResourceID = 10000843685
--select * from #Resource where ResourceID = 10000843685                  
--элемент - cделка

union

select rpeh.AccountID,
       rpeh.DateBegin,
       sum(isnull(rpeh.ReserveToForming,0)),--rpeh.ReserveToForming,
       d.FundID,
       2
  from tInstrument       i    #M_NOLOCK_INDEX(XAK0tInstrument), 
       tDeal             d    #M_NOLOCK_INDEX(XIE3tDeal), 
       tRPElement        rpe  #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       #Classifier       c    #M_NOLOCK_INDEX(XPKClassifier)                        
 where 1=1
   and i.InterfaceObjectID    in (16,3)
   and d.InstrumentID         = i.InstrumentID
--   and d.FundID              <> 2
   and rpe.ObjectID           = d.DealID 
   and rpe.ObjectTypeID      <> 1            --связанный объект - не счет
   and (rpe.Flag & 32         = 0 
    or rpe.DateClose          > @Date)
   and rpe.Flag & 4           = 0 
   and rpeh.RPElementID       = rpe.RPElementID
   and rpeh.AccountID         = c.ResourceID
   and @Date                 >= rpeh.DateBegin 
   and (@Date                 < rpeh.DateEnd
    or rpeh.DateEnd           = '19000101')
   and c.Type                 = 1
   and c.ResourceID           = rpeh.AccountID
   and c.Comment              in ('1','2')
   and (@Del232               = 0
    or c.Comment              = '1')   
   and not exists (select 1
                     from tDealRelation dr #M_NOLOCK_INDEX(XPKtDealRelation)
                    where 1=1
                      and dr.RelType           = 31
                      and dr.ParentID          = d.DealID)
   and not exists (select 1
                     from tDealRelation dr #M_NOLOCK_INDEX(XIE2tDealRelation)
                    where dr.ChildID           = d.DealID
                      and dr.RelType           = 31)
   and not exists (select 1
                     from #Resource r #M_NOLOCK_INDEX(XPKResource)
                    where r.Type       = 1
                      and r.ResourceID = rpeh.AccountID)
group by rpeh.AccountID, d.FundID, rpeh.DateBegin

--элемент - кредитная линия

union

/*declare @Date smalldatetime
select  @Date = '20060219'
declare @Del232 tinyint
select  @Del232 = 0*/

select rpeh.AccountID,
       rpeh.DateBegin,
       sum(isnull(rpeh.ReserveToForming,0)),       
       d.FundID,
       2               
  from tInstrument       i    #M_NOLOCK_INDEX(XAK0tInstrument),
       tDeal             d    #M_NOLOCK_INDEX(XIE3tDeal),
       tDealRelation     dr   #M_NOLOCK_INDEX(XPKtDealRelation),
       tRPElement        rpe  #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       #Classifier       c    #M_NOLOCK_INDEX(XPKClassifier)
 where 1=1
   and i.InterfaceObjectID     in (16,3)
   and d.InstrumentID          = i.InstrumentID
--   and d.FundID               <> 2
   and dr.ParentID             = d.DealID
   and dr.RelType              = 31
   and rpe.ObjectID            = d.DealID 
   and rpe.ObjectTypeID       <> 1            --связанный объект - не счет   
   and (rpe.Flag & 32          = 0 
    or rpe.DateClose           > @Date)
   and rpe.Flag & 4            = 0    
   and rpeh.RPElementID        = rpe.RPElementID
   and @Date                  >= rpeh.DateBegin 
   and (@Date                   < rpeh.DateEnd
    or rpeh.DateEnd            = '19000101')
   and c.Type                  = 1    
   and c.ResourceID            = rpeh.AccountID
--   and c.ResourceID           = 10000023012
    and (@Del232               = 0
    or c.Comment              = '1')
group by rpeh.AccountID, d.FundID, rpeh.DateBegin       
      
--векселя

union

/*declare @Date smalldatetime
select  @Date = '20060219'
declare @Del232 tinyint
select  @Del232 = 0 */
 
select rpeh.AccountID,
       rpeh.DateBegin,
       sum(isnull(rpeh.ReserveToForming,0)),       
       s.NominalFundID,
       2  
  from tInstrument       i    #M_NOLOCK_INDEX(XAK0tInstrument),
       tDeal             d    #M_NOLOCK_INDEX(XIE3tDeal),
       tBill             b    #M_NOLOCK_INDEX(Bill_ind_1),
       tSecurity         s    #M_NOLOCK_INDEX(XPKtSecurity),    
       tRPElement        rpe  #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       #Classifier       c    #M_NOLOCK_INDEX(XPKClassifier)                        
 where 1=1
   and i.InterfaceObjectID     = 29
   and d.InstrumentID          = i.InstrumentID
   and d.FundID               <> 2
   and d.InstrumentType        = 5
   and d.ValueDate             = '19000101'
   and d.ContractFlag          = 0
   and b.SecurityID            = d.SecurityID
   and s.SecurityID            = d.SecurityID
   and s.NominalFundID        <> 2  
   and rpe.ObjectID            = d.DealID
   and rpe.ObjectTypeID       <> 1            --связанный объект - не счет   
   and (rpe.Flag & 32          = 0 
    or rpe.DateClose           > @Date)
   and rpe.Flag & 4            = 0    
   and rpeh.RPElementID        = rpe.RPElementID
   and @Date                  >= rpeh.DateBegin 
   and (@Date                  < rpeh.DateEnd
    or rpeh.DateEnd            = '19000101')
   and c.Type                  = 1     
   and c.ResourceID            = rpeh.AccountID
   and c.Comment               = '3'
--   and c.ResourceID            = 10000793287
group by rpeh.AccountID, s.NominalFundID, rpeh.DateBegin 

--элемент - договор потреб. кредит

union

select rpeh.AccountID,
       rpeh.DateBegin,
       sum(isnull(rpeh.ReserveToForming,0)),
       d.FundID,
       2
  from tInstrument       i    #M_NOLOCK_INDEX(XAK0tInstrument),
       tContract         d    #M_NOLOCK_INDEX(XIE3tContract),
       tRPElement        rpe  #M_NOLOCK_INDEX(XAK2tRPElement),
       tRPElementHistory rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       #Classifier       c    #M_NOLOCK_INDEX(XPKClassifier)
 where 1=1
   and i.InterfaceObjectID    in ( 16,3)
   and d.InstrumentID         = i.InstrumentID
   and d.FundID              <> 2
   and rpe.ObjectID           = d.ContractID
   and rpe.ObjectTypeID      <> 1            --связанный объект - не счет
   and (rpe.Flag & 32         = 0 
    or rpe.DateClose          > @Date)
   and rpe.Flag & 4           = 0 
   and rpeh.RPElementID       = rpe.RPElementID
   and rpeh.AccountID         = c.ResourceID
   and @Date                 >= rpeh.DateBegin 
   and (@Date                  < rpeh.DateEnd
    or rpeh.DateEnd           = '19000101')
   and c.Type                 = 1
   and c.ResourceID           = rpeh.AccountID
   and (@Del232               = 0
    or c.Comment              = '1')
   and not exists (select 1
                     from #Resource r #M_NOLOCK_INDEX(XPKResource)
                    where r.Type       = 1
                      and r.ResourceID = rpeh.AccountID)
group by rpeh.AccountID, d.FundID, rpeh.DateBegin

--если счет резерва по просрочке равен счету резерва

--select * from tResource where Brief = '45515810100000000070'
--10001610783
--select * from #ResourceRBR where ResourceID = 10001610783
--select * from tResource where Brief = '45515810200000000080'
--10001811024

--declare @Date smalldatetime
--select @Date = '20060216'

--declare @Del232 tinyint
--select @Del232 = 1


--cчет резерва по просрочке совпадает со счетом резерва

create table #Pr(
                ResourceID numeric(15,0),
                SecurityID numeric(15,0),
                Summe      money
                )
insert #Pr                
select rb.ResourceID,
       d.FundID, 
       sum(rhd.ReserveToForming)
  from #ResourceRBR          rb,
       tRPElementHistoryDebt rhd #M_NOLOCK,
       tRPElementHistory     rh  #M_NOLOCK_INDEX(XPKtRPElementHistory),
       tRPElement            re  #M_NOLOCK_INDEX(XPKtRPElement),
       tDeal                 d   #M_NOLOCK_INDEX(XPKtDeal)
 where 1=1
  and rhd.AccountID            = rb.ResourceID 
  and @Date                   >= rhd.DateBeginDebt 
  and (@Date                   < rhd.DateEndDebt
   or rhd.DateEndDebt          = '19000101')
  and rh.RPElementHistoryID    = rhd.RPElementHistoryID
  and @Date                   >= rh.DateBegin 
  and @Date                    < rh.DateEnd
  and re.RPElementID           = rh.RPElementID
  and re.ObjectTypeID         = 2
  and (re.Flag & 32           = 0 or re.DateClose > @Date)
  and re.Flag & 4             = 0 
  and d.DealID                 = re.ObjectID
group by rb.ResourceID, d.FundID



#ifdef SYB_STYLE

update #ResourceRBR
   set ReserveToForming = rb.ReserveToForming + pr.Summe
  from #ResourceRBR rb,
       #Pr          pr
 where 1=1
   and rb.ResourceID = pr.ResourceID
   and rb.SecurityID = pr.SecurityID
   
#else

update rb
   set ReserveToForming = rb.ReserveToForming + pr.Summe
  from #ResourceRBR rb,
       #Pr          pr
 where 1=1
   and rb.ResourceID = pr.ResourceID
   and rb.SecurityID = pr.SecurityID 
     
#endif

--вставляем просрочку, счета резервов по которой еще не вошли 

insert #ResourceRBR(
                   ResourceID,
                   DateBegin,
                   ReserveToForming,
                   SecurityID,
                   Type
                   ) 
                   
--declare @Date smalldatetime
--select @Date = '20060216'
 
 select rhd.AccountID,
        rpeh.DateBegin,
        sum(isnull(rhd.ReserveToForming,0)),
        d.FundID,
        2
   from tRPElement            rpe,                                    
        tRPElementHistory     rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
        tRPElementHistoryDebt rhd  #M_NOLOCK_INDEX(XPKtRPElementHistoryDebt),
        #Classifier           c    #M_NOLOCK_INDEX(XPKClassifier),
        tDeal                 d    #M_NOLOCK_INDEX(XPKtDeal)                 
  where 1=1
    and rpe.ObjectTypeID         = 2
    and (rpe.Flag & 32           = 0 or rpe.DateClose > @Date)
    and rpe.Flag & 4             = 0 
    and rpeh.RPElementID         = rpe.RPElementID 
    and @Date                   >= rpeh.DateBegin 
    and @Date                    < rpeh.DateEnd
    and rhd.RPElementHistoryID   = rpeh.RPElementHistoryID   
    and @Date                   >= rhd.DateBeginDebt 
    and (@Date                   < rhd.DateEndDebt
     or rhd.DateEndDebt          = '19000101')
    and rhd.AccountID           <> rpeh.AccountID 
   -- and rhd.AccountID            = 10002435080
    and c.Type                   = 1       
    and rhd.AccountID            = c.ResourceID
    and d.DealID                 = rpe.ObjectID
    and d.FundID                <> 2
    and not exists (select 1
                     from #Resource rs #M_NOLOCK_INDEX(XPKResource)
                    where rs.Type       = 1
                      and rs.ResourceID = rpeh.AccountID) 
    and not exists (select 1
                     from #ResourceRBR rb
                    where 1=1
                      and rb.ResourceID = rhd.AccountID)                                    
group by rhd.AccountID, d.FundID, rpeh.DateBegin
       
union 

--просрочка по потреб. кредитам 
 
 select rhd.AccountID,
        rpeh.DateBegin,
        sum(isnull(rhd.ReserveToForming,0)),
        d.FundID,
        2 
   from tRPElement            rpe  ,
        tRPElementHistory     rpeh #M_NOLOCK_INDEX(XAK1tRPElementHistory),
        tRPElementHistoryDebt rhd  #M_NOLOCK_INDEX(XPKtRPElementHistoryDebt),
        #Classifier           c    #M_NOLOCK_INDEX(XPKClassifier),
        tContract             d    #M_NOLOCK_INDEX(XPKtContract)       
  where 1=1
    and rpe.ObjectTypeID         = 2
    and (rpe.Flag & 32           = 0 or rpe.DateClose > @Date)
    and rpe.Flag & 4             = 0 
    and rpeh.RPElementID         = rpe.RPElementID
    and @Date                   >= rpeh.DateBegin 
    and @Date                    < rpeh.DateEnd 
    and rhd.RPElementHistoryID   = rpeh.RPElementHistoryID  
    and @Date                   >= rhd.DateBeginDebt 
    and (@Date                   < rhd.DateEndDebt
     or rhd.DateEndDebt          = '19000101')
    and rhd.AccountID           <> rpeh.AccountID
    and c.Type                   = 1      
    and rhd.AccountID            = c.ResourceID 
    and d.ContractID             = rpe.ObjectID
    and d.FundID                <> 2
    and not exists (select 1
                     from #Resource rs  #M_NOLOCK_INDEX(XPKResource)
                    where rs.Type       = 1
                      and rs.ResourceID = rpeh.AccountID)
    and not exists (select 1
                     from #ResourceRBR rb
                    where 1=1
                      and rb.ResourceID = rhd.AccountID)
                                                                                                      
group by rhd.AccountID, d.FundID, rpeh.DateBegin 
 
--счета неполученных процентов
--заемщики

insert #ImpureClient
select distinct(r.InstOwnerID)
  from #Classifier c #M_NOLOCK_INDEX(XPKClassifier),
       tResource   r #M_NOLOCK_INDEX(XPKtResource)
 where 1=1
   and c.Type       = 2
   and r.ResourceID = c.ResourceID
   
--ссудные счета (владелец - заемщик)

declare @Form115Classifier numeric(15,0)
 select @Form115Classifier = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where 1=1
    and oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = 'Форма115_1376'   

insert #Impure(
              ResourceID,
              InstOwnerID,
              Type
              )             
select r.ResourceID,
       r.InstOwnerID,
       1
  from #ImpureClient   ic, -- 18.07.2007 MAF работает быстрее
       tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier),
       tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResourceBind   rb  #M_NOLOCK_INDEX(XIE3tResourceBind),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource)
 where 1=1                                                      
   and oc.ObjType          = 3
   and oc.ParentID         = @Form115Classifier
   and (oc.Brief           like '01\%' 
    or oc.Brief            like '02\%')
   and ocr.ObjClassifierID = oc.ObjClassifierID
   and ocr.ObjType         = 3
   and ocr.Comment         <> 'ПП'
   and ocr.Comment         <> 'РВП'
   and rb.ParentID         = ocr.ObjectID
   and rb.ChildResType     = 1
   and r.ResourceID        = rb.ChildID
   and r.ResourceType      = 1
   and r.CharType          = 1
   and (r.DateStart       <= @Date 
    or r.DateEnd           >  @Date)
   and ic.InstitutionID    = r.InstOwnerID
   
--счета резервов (владелец - заемщик)

insert #Impure(
              ResourceID,
              InstOwnerID,
              Type
              )
select r.ResourceID,
       r.InstOwnerID,
       2     
  from #ImpureClient   ic, -- 18.07.2007 MAF работает быстрее
       tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier),
       tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tResourceBind   rb  #M_NOLOCK_INDEX(XIE3tResourceBind),
       tResource       r   #M_NOLOCK_INDEX(XPKtResource)
 where 1=1
   and oc.ObjType          = 3
   and oc.ParentID         = @Form115Classifier
   and (oc.Brief           like '01\%' 
    or oc.Brief            like '02\%')
   and ocr.ObjClassifierID = oc.ObjClassifierID
   and ocr.ObjType         = 3
   and ocr.Comment         = 'РВП'
   and rb.ParentID         = ocr.ObjectID
   and rb.ChildResType     = 1
   and r.ResourceID        = rb.ChildID
   and r.ResourceType      = 1
   and r.CharType          = 2
   and (r.DateStart       <= @Date 
    or r.DateEnd           > @Date)
   and ic.InstitutionID    = r.InstOwnerID                 
   
--счета неполученных процентов, проклассифицированые рубриками классификатора "634Связь"
    
create table #Link(
                  ResourceProcID numeric(15,0), --проклассифицированный счет неполученных процентов
                  ResourceLoanID numeric(15,0), --ссудный счет
                  ResourceResID  numeric(15,0), --счет резерва
                  SumProc        money,
                  SumLoan        money,
                  SumRes         money,
                  PrcReserv      float   null,  -- относительная ставка резервирования
                  ResToUse       money   null,  -- для расчета 11й колонки
                  InCalc         tinyint        -- новое поле
                  )

insert #Link
select ocr.ObjectID,
       ocr1.ObjectID,
       ocr2.ObjectID,
       0,
       0,
       0,
       0,
       0,
       0
  from #Classifier     c     #M_NOLOCK_INDEX(XPKClassifier),
       tObjClsRelation ocr   #M_NOLOCK_INDEX(XIE1tObjClsRelation),
       tObjClsRelation ocr1  #M_NOLOCK_INDEX(XIE0tObjClsRelation),
       tObjClsRelation ocr2  #M_NOLOCK_INDEX(XIE0tObjClsRelation)            
         
 where 1=1
   and c.Type                     = 2
   and ocr.ObjType                = 3
   and ocr.ObjectID               = c.ResourceID
   and ltrim(rtrim(ocr.Comment))  = 'П'
   and ocr1.ObjClassifierID       = ocr.ObjClassifierID
   and ocr1.ObjType               = 3
   and ltrim(rtrim(ocr1.Comment)) = 'С'
   and ocr2.ObjClassifierID       = ocr.ObjClassifierID
   and ocr2.ObjType               = 3
   and ltrim(rtrim(ocr2.Comment)) = 'Р' 
                                           
-- Определяем ИД отчета на котором загружены вспомогательные фин показатели
--declare @FP634ID numeric(15,0)
select @FP634ID = SampleID
  from tSample (index XAK0tSample)
 where Brief = 'Ф634_ФинПок'
#M_ISOLAT

-- Заполняем табличку данными из фин показателей.
insert #FinPok
select ex.ExponentID
      ,case substring(ex.Brief,1,5)
         when '91414' then substring(convert(varchar(20),ex.Name),1,datalength(convert(varchar(20),ex.Name)) - 2)
         when '91312' then substring(convert(varchar(20),ex.Name),1,datalength(convert(varchar(20),ex.Name)) - 2) --05.09.2007 Сапронов Н.Г.
         else convert(varchar(20),ex.Name)
       end
      ,ex.Brief
      ,case substring(ex.Brief,1,5) 
         when '45515' then -1*round(convert(money,ev.ExponentValue),2)
         when '45818' then -1*round(convert(money,ev.ExponentValue),2)  
         when '45918' then -1*round(convert(money,ev.ExponentValue),2)  -- MAF 20080617
         when '47425' then -1*round(convert(money,ev.ExponentValue),2)  -- MAF 20080617
         when '91604' then    round(convert(money,ev.ExponentValue),2)
         else                 round(convert(money,ev.ExponentValue),2)
       end
      ,case substring(ex.Brief,1,5) 
         when '45515' then 2
         when '45818' then 2
         when '45918' then 2 -- MAF 20080617
         when '47425' then 2 -- MAF 20080617
         when '91604' then 3
         when '91414' then 4
         when '91312' then 4 --05.09.2007 Сапронов Н.Г.
         else 1
       end
      ,case substring(ex.Brief,1,5) 
         when '45515' then e1.ExponentValue
         else 0
       end
      ,f.CurrencyID
  from tExponent      ex (index XAK1tExponent)
      ,tExpValType    vt (index XAK1tExpValType)
      ,tExpValType    v1 (index XAK1tExpValType)
      ,tExponentValue ev (index XPKtExpValues)
      ,tExponentValue e1 (index XPKtExpValues)
      ,tCurrency      f  (index XIE1tCurrency)
 where 1 = 1
   and ex.SampleID     = @FP634ID
   and ev.ExponentID   = ex.ExponentID
   and ev.ExponentDate = @DateStr--dateadd(dd,1,@Date)
   and e1.ExponentID   = ex.ExponentID
   and e1.ExponentDate = @DateStr--dateadd(dd,1,@Date)
   and vt.SampleID     = ex.SampleID
   and vt.TypeNumber   = 1
   and vt.ExpValTypeID = ev.ExpValTypeID
   and v1.SampleID     = ex.SampleID
   and v1.TypeNumber   = 2
   and v1.ExpValTypeID = e1.ExpValTypeID
   and f.Number        = substring(ex.Brief,6,3)
-- order by ex.Name

-- Определяем счета имеющиеся в диасофте
insert #IsIntResource
select r.ResourceID
  from #FinPok   a
      ,tResource r  (index XAK1tResource)
 where 1 = 1
   and substring(a.Brief,1,3) = '916'
   and r.Brief = a.Brief

-- Отбираем счета не относящиеся к неполученным процентам по кредитам
insert #AccForProcess
select r.ResourceID
      ,r.Brief
      ,r.FundID
      ,isnull(case when (convert(int,ia.RegTemp)&2)/2 = 1 then 1
                   when (convert(int,ia.RegTemp)&1)/1 = 1 then 0
              end,0)
      ,0
      ,0
  from tResource r0 (index XIE1tResource)
      ,tResource r  (index XAK3tResource)
      ,tInstAttr ia (index XPKtInstAttr)
 where 1 = 1
   and r0.ParentHash in (';В;;6;;916;;04;',';В;;6;;916;;03;')
   and r.ParentID       = r0.ResourceID
   and r.InstitutionID  = %InstitutionID!
   and r.FundID         = 1  -- Поскольку в банке есть только долларовые карты с овердрафтом
   and (r.DateStart    <= @Date 
     or r.DateEnd       > @Date)
   and ia.InstitutionID = r.InstOwnerID
   and not exists(select 1
                    from #IsIntResource t (index r1)
                   where t.ResourceID = r.ResourceID
                  )

-- считаем по этим счетам остатки
delete from pAccRestList where SPID = @@SPID

insert pAccRestList(
                   SPID, 
                   ResourceID, 
                   DateClosed, 
                   DateFixed, 
                   Date
                   )
                   
select distinct @@SPID,
       rc.ResourceID, 
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #AccForProcess rc,
       tResource      r  #M_NOLOCK_INDEX(XPKtResource),
       tBranch        b  #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID

#M_FORCEPLAN_OFF
exec AccListRest_Calc  --расчет остатков
     @Date      = @Date,    
     @Confirmed = 1,
     @NoCursor  = 1
     
#M_FORCEPLAN

update #AccForProcess
   set Rest = rl.Rest
  from pAccRestList   rl (index pAccRestList)
      ,#AccForProcess ac
 where rl.Spid = @@spid
   and rl.Date = @Date
   and rl.ResourceID = ac.ResourceID

update #AccForProcess
   set ResToUse = Rest*(100 - case RegTemp when 0 then %A! when 1 then %I! end)/100
   
--18.07.2007 MAF start
insert #CardRVPS
select r.ResourceID
      ,r.Brief
      ,r.FundID
      ,-1 * v1.ExponentValue * v2.ExponentValue / 100
      ,convert(varchar, round(v3.ExponentValue, 0))
  from tResource r0 (index XIE1tResource)
      ,tResource r  (index XAK3tResource)
      ,tExponent      ex (index XAK1tExponent),
       tExpValType    t1 (index XAK1tExpValType),
       tExponentValue v1 (index XPKtExpValues),
       tExpValType    t2 (index XAK1tExpValType),
       tExponentValue v2 (index XPKtExpValues),
       tExpValType    t3 (index XAK1tExpValType),
       tExponentValue v3 (index XPKtExpValues)
 where 1 = 1
   and r0.ParentHash  in (';А;;4;;55;;09;', ';А;;4;;58;;15;')
   and r.ParentID      = r0.ResourceID
   and r.InstitutionID = %InstitutionID!
   and r.FundID        = 1
   and ex.SampleID = @FP634ID
   and ex.Brief    = r.Brief
   and t1.SampleID   = ex.SampleID
   and t1.TypeNumber = 1 --Ostatok
   and v1.ExponentID   = ex.ExponentID
   and v1.ExpValTypeID = t1.ExpValTypeID
   and v1.ExponentDate = @DateStr
   and t2.SampleID   = ex.SampleID
   and t2.TypeNumber = 2 --PrcReserv                
   and v2.ExponentID   = ex.ExponentID
   and v2.ExpValTypeID = t2.ExpValTypeID
   and v2.ExponentDate = @DateStr
   and t3.SampleID   = ex.SampleID
   and t3.TypeNumber = 3 --Portfolio
   and v3.ExponentID   = ex.ExponentID
   and v3.ExpValTypeID = t3.ExpValTypeID
   and v3.ExponentDate = @DateStr

#M_FORCEPLAN_OFF

/*   
insert #CardRVPS
select r.ResourceID
      ,r.Brief
      ,r.FundID
      ,0
  from tResource r0 (index XIE1tResource)
      ,tResource r  (index XAK3tResource)
 where 1 = 1
   and r0.ParentHash   = ';А;;4;;55;;09;'
   and r.ParentID      = r0.ResourceID
   and r.InstitutionID = %InstitutionID!
   and r.FundID        = 1

-- считаем по этим счетам остатки
delete from pAccRestList where SPID = @@SPID

insert pAccRestList(
                   SPID, 
                   ResourceID, 
                   DateClosed, 
                   DateFixed, 
                   Date
                   )
                   
select distinct @@SPID,
       rc.ResourceID, 
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #CardRVPS rc,
       tResource r  #M_NOLOCK_INDEX(XPKtResource),
       tBranch   b  #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID

#M_FORCEPLAN_OFF
exec AccListRest_Calc  --расчет остатков
     @Date      = @Date,    
     @Confirmed = 1,
     @NoCursor  = 1
     
#M_FORCEPLAN
update #CardRVPS
   set Rest = -1*rl.Rest
  from pAccRestList rl (index pAccRestList)
 where rl.Spid = @@spid
   and rl.Date = @Date
   and rl.ResourceID = #CardRVPS.ResourceID
*/
--18.07.2007 MAF end

-- Заносим значения в табличку #Link
-- MAF 17.06.2008 start
/*
insert #Link
select isnull(max(case when Flag = 3 then ExpID  end), 0) as PrsrID     --19.07.2007 MAF добавил isnull
      ,isnull(max(case when Flag = 1 then ExpID  end), 0) as LoanID     --19.07.2007 MAF добавил isnull
      ,isnull(max(case when Flag = 2 then ExpID  end), 0) as ReservID
      ,isnull(sum(case when Flag = 3 then Rest   end), 0) as PrsrRest   --19.07.2007 MAF добавил isnull
      ,isnull(sum(case when Flag = 1 then Rest   end), 0) as LoanRest   --19.07.2007 MAF добавил isnull
      ,isnull(sum(case when Flag = 2 then Rest   end), 0) as ReservRest
      ,isnull(max(case when Flag = 2 then PrcRes end), 0) as PrcReserv
      ,0
      ,1 -- указатель на то что это внешние данные
  from #FinPok
 group by Number
*/

insert #Link
select isnull(max(case when f1.Flag = 3 then f1.ExpID end), 0) as PrsrID     --19.07.2007 MAF добавил isnull
      ,isnull(max(case when f1.Flag = 1 then f1.ExpID end), 0) as LoanID     --19.07.2007 MAF добавил isnull
      ,isnull(max(case when f2.Flag = 2 then f2.ExpID end), 0) as ReservID
      ,isnull(sum(case when f1.Flag = 3 and f2.Brief like '45515\%' then f1.Rest end), 0) as PrsrRest   --19.07.2007 MAF добавил isnull
      ,isnull(sum(case when f1.Flag = 1 and f2.Brief like '45515\%' then f1.Rest end), 0) as LoanRest   --19.07.2007 MAF добавил isnull
      ,isnull(max(case when f2.Flag = 2 then f2.Rest end), 0) as ReservRest
      ,isnull(max(case when f2.Flag = 2 and f2.Brief like '45515\%' then f2.PrcRes end), 0) as PrcReserv
      ,0
      ,1 -- указатель на то что это внешние данные
  from #FinPok f1 (index i2),
       #FinPok f2 (index i2)
  where f1.Flag  <> 2
    and f2.Number = f1.Number
    and f2.Flag = 2
 group by f1.Number, f2.Brief
-- MAF 17.06.2008 end

--остатки по счетам за дату

delete from pCourse where SPID = @@spid 
delete from pAccRestList where SPID = @@SPID

insert pAccRestList(
                   SPID, 
                   ResourceID, 
                   DateClosed, 
                   DateFixed, 
                   Date
                   )
                   
select distinct @@SPID,
       rc.ResourceID, 
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #Resource rc,
       tResource r  #M_NOLOCK_INDEX(XPKtResource),
       tBranch   b  #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and rc.Type             <> 7
   and rc.Summe             = 0
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID

union

select distinct @@SPID,
       rc.ResourceID, --рублевые счета резервов
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #ResourceRBR rc  ,
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and rc.Type              = 1
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID

union

select distinct @@SPID,
       rc.ResourceID, --рублевые счета резервов
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #ResourceRBR rc,
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and rc.Type              = 2
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID

union

select distinct @@SPID,
       rc.ResourceID, --счета резервов и ссудные для счетов неполученных процентов
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #Impure      rc,
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID

union   
   
select distinct @@SPID,
       rc.ResourceID, --счета неполученных процентов, аккредитивы
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #Classifier  rc  #M_NOLOCK_INDEX(XPKClassifier),
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and rc.Type              in (2,3,4)
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID   
   
union

select distinct @@SPID,
       rc.ResourceID, --счета гарантий
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #Guarantee   rc,
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and r.ResourceID         = rc.ResourceID
   and b.InstitutionID      = r.InstitutionID
   
union

select distinct @@SPID,
       rc.ResourceLoanID, --ссудный счет для счетов неполученных процентов
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #Link        rc,
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and r.ResourceID         = rc.ResourceLoanID
   ----------------
   and rc.InCalc            = 0 -- только существующие счета резервов в плане счетов
   ----------------
   and b.InstitutionID      = r.InstitutionID   
   
union     

select distinct @@SPID,
       rc.ResourceResID, --счет резерва для счетов неполученных процентов
       b.DateClosed,
       b.DateFixed,
       @Date                   
  from #Link        rc,
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       tBranch      b   #M_NOLOCK_INDEX(XPKtBranch)
 where 1=1
   and r.ResourceID         = rc.ResourceResID
   ----------------
   and rc.InCalc            = 0 -- только существующие счета резервов в плате счетов
   ----------------
   and b.InstitutionID      = r.InstitutionID   

--если дата последнего начисления - последний рабочий день месяца
--резерв приводится к валюте по курсу последнего дня месяца

create table #MonthEnd(
                       DateWork smalldatetime,
                       DateEnd  smalldatetime
                      ) 

declare @DateMin0 smalldatetime,
        @DateMax0 smalldatetime
        
select @DateMin0 = (select min(DateBegin)
                    from #ResourceRBR)
select @DateMax0 = (select max(DateBegin)
                    from #ResourceRBR)                                                                                  

insert #MonthEnd(
                DateWork,
                DateEnd 
                )   
select convert(smalldatetime,convert(char(8), c0.DateInt)),
       convert(smalldatetime,convert(char(8), c0.DateInt))
  from tCalendarContent c0  #M_NOLOCK_INDEX(XAK0tCalendarContent)
 where c0.CalendarID = 2
   and c0.DateInt between convert(int,convert(char(8),@DateMin0, 112)) and convert(int,convert(char(8),@DateMax0, 112))
   and Day = (
              select max(Day)
                from tCalendarContent c1  #M_NOLOCK_INDEX(XPKtCalendarContent)
               where c1.CalendarID = c0.CalendarID
                 and c1.Year       = c0.Year
                 and c1.Month      = c0.Month 
               ) 
               
update #MonthEnd
   set DateEnd =isnull( 
                       (
                       select convert(smalldatetime,convert(char(8), max(c1.DateInt)))
                         from tCalendarContent c0  #M_NOLOCK_INDEX(XAK0tCalendarContent),
                              tCalendarContent c1  #M_NOLOCK_INDEX(XPKtCalendarContent)
                        where c0.CalendarID  = 2 
                          and c0.DateInt     = convert(int,convert(char(8),#MonthEnd.DateWork, 112))
                          and c1.CalendarID  = 1
                          and c1.Year        = c0.Year
                          and c1.Month       = c0.Month 
                        ), #MonthEnd.DateEnd     
                       )   

update #ResourceRBR
   set DateBegin = me.DateEnd
  from #MonthEnd me
 where me.DateWork = #ResourceRBR.DateBegin
 
if @Reg7 = 0
begin
  update #ResourceRBR
     set DateBegin = @Date
end 
else
  update #ResourceRBR
     set DateBegin = @EndMonth
--для проклассифицированных лицевых счетов резервов 
--остатки приводятся к валюте на дату последней фактической проводки

create table #Scheisse(
                       ResourceID numeric(15,0),
                       Date       smalldatetime
                       )
insert #Scheisse(
                 ResourceID,
                 Date
                 )
select r.ResourceID,
       max(op.OperDate)
  from #Resource r  #M_NOLOCK_INDEX(XPKResource),
       tOperPart op #M_NOLOCK_INDEX(XAK1tOperPart)
 where r.Type            = 1
   and r.Summe           = 0
   and op.ResourceID     = r.ResourceID
   and op.Confirmed      = 1
   and op.OperDate      <= @Date
group by r.ResourceID                                           
     
--даты расчета курсов
--declare @Date smalldatetime
--select @Date = '20060216'

declare @DateMin smalldatetime,
        @DateMax smalldatetime

declare @DateMin1 smalldatetime,
        @DateMax1 smalldatetime
        
declare @DateMin2 smalldatetime,
        @DateMax2 smalldatetime        
----------------------------------------        
select @DateMin1 = (select min(DateBegin)
                    from #ResourceRBR
                    where DateBegin > '19000101' 
                    )                                        
                   
select @DateMax1 = (select max(DateBegin)
                    from #ResourceRBR)
----------------------------------------        
select @DateMin2 = (select min(Date)
                    from #Scheisse
                    where Date > '19000101')                                        
                   
select @DateMax2 = (select max(Date)
                    from #Scheisse)
----------------------------------------
declare @DateMin3 smalldatetime,
        @DateMax3 smalldatetime 
        
----------------------------------------               
        
select @DateMin3 = (select min(DateBegin)
                      from #Guarantee
                    where DateBegin > '19000101')
select @DateMax3 = (select max(DateBegin)
                      from #Guarantee)
                                            
select @DateMin = @DateMin1
if @DateMin2<@DateMin select @DateMin = @DateMin2
if @DateMin3<@DateMin select @DateMin = @DateMin3
select @DateMax = @DateMax1
if @DateMax2>@DateMax select @DateMax = @DateMax2                    
if @DateMax3>@DateMax select @DateMax = @DateMax3                    
                    
if isnull(@DateMax, '19000101') < @Date select @DateMax = @Date

--select @DateMin, @DateMax, @EndMonth

#M_FORCEPLAN_OFF 

if @EndMonth < isnull(@DateMin, '20500101')
  select @DateMin = @EndMonth

exec Course_GetAll   @Date         = @Date,
                     @DateStart    = @DateMin,
                     @CalendarID   = 1                     

exec AccListRest_Calc  --расчет остатков
     @Date      = @Date,    
     @Confirmed = 1,
     @NoCursor  = 1
     
#M_FORCEPLAN

--приводятся остатки проклассифицированных счетов резервов по курсу даты последней проводки

update #Link
   set SumRes   = SumRes/c.Course
  from #FinPok fp #M_NOLOCK_INDEX(i1)
      ,pCourse c  #M_NOLOCK_INDEX(XPKE_363)
 where #Link.InCalc = 1
   and fp.ExpID     = #Link.ResourceLoanID
   and c.SPID       = @@SPID
   and c.FundDest   = fp.FundID
   and c.FundSrc    = 2
   and c.Date = @EndMonth
/*
update #CardRVPS
   set Rest = Rest/c.Course
  from pCourse c #M_NOLOCK_INDEX(XPKE_363)
 where 1 = 1
   and c.SPID       = @@SPID
   and c.FundDest   = 1
   and c.FundSrc    = 2
*/
update #Link
   set ResToUse = SumProc*(100 - PrcReserv)/100

/*
select * from #Link
return
*/
update #Resource
   set Summe = convert(money,abs(p.Rest)/isnull(c.Course,1))
  from pAccRestList p   #M_NOLOCK_INDEX(XPKpAccRestList)
      ,#Scheisse    s
      ,pCourse      c   #M_NOLOCK_INDEX(XPKE_363)
 where 1=1
   and #Resource.Summe       = 0
   and #Resource.Type        = 1
   and p.SPID                = @@SPID
   and p.Date                = @Date
   and p.ResourceID          = #Resource.ResourceID
   and s.ResourceID          = p.ResourceID
   and c.SPID                = @@SPID
   and c.FundDest            = #Resource.SecurityID
   and c.FundSrc             = 2
   and ((@Reg7 = 0 and c.Date = @Date) or (@Reg7 = 1 and c.Date = s.Date))
--raiserror 88888899 str(@@RowCount)
--if @@RowCount > 0
--  raiserror 88888899 str(@@RowCount)

--рублевые остатки делятся на курс

update #Resource
   set Summe = convert(money,abs(p.Rest)/c.Course)
  from pAccRestList p   #M_NOLOCK_INDEX(XPKpAccRestList),
       tResource    r   #M_NOLOCK_INDEX(XPKtResource),
       pCourse      c   #M_NOLOCK_INDEX(XPKE_363)
 where 1=1
   and #Resource.Summe       = 0
   and #Resource.Type        <>1
   and p.SPID                = @@SPID
   and p.Date                = @Date
   and p.ResourceID          = #Resource.ResourceID
   and r.ResourceID          = p.ResourceID
   and r.FundID              = 2 --рублевые счета
   and c.SPID                = @@SPID
   and c.FundDest            = #Resource.SecurityID
   and c.FundSrc             = 2
   and c.Date                = @Date
   
update #Resource
   set Summe = abs(p.Rest)
  from pAccRestList p   #M_NOLOCK_INDEX(XPKpAccRestList),
       tResource    r   #M_NOLOCK_INDEX(XPKtResource)
 where 1=1
   and #Resource.Summe       = 0
   and p.SPID                = @@SPID
   and p.Date                = @Date
   and p.ResourceID          = #Resource.ResourceID
   and r.ResourceID          = p.ResourceID
   and r.FundID              <> 2 --валютные счета  

--счета неполученных процентов
--приведенные остатки по ссудным счетам и неприведенные по счетам резервов
   
insert #ImpureRests(
                   InstitutionID,
                   RestBs,
                   Rest
                   )
select i.InstOwnerID,
       sum(case when i.Type = 1
                then p.RestBs
                else 0
           end),
       sum(case when i.Type = 2
                then p.Rest
                else 0
           end)
  from pAccRestList p #M_NOLOCK_INDEX(XPKpAccRestList),
       #Impure      i
 where p.SPID                      = @@SPID
   and p.Date                      = @Date
   and i.ResourceID                = p.ResourceID
group by i.InstOwnerID                    

--группируем резервы к формированию и рассчетные базы резервирования по заемщикам

insert #ImpureRBR

select ic.InstitutionID,
       sum(rh.ReserveToForming+isnull(rhd.ReserveToForming,0)),
       sum(rh.Base+isnull(rhd.Base,0))
  from #ImpureClient         ic,
       tRPElement            re  #M_NOLOCK,
       tRPElementHistory     rh  #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       tResource             r   #M_NOLOCK_INDEX(XPKtResource),
       tRPElementHistoryDebt rhd #M_NOLOCK_INDEX(XPKtRPElementHistoryDebt) 
 where 1=1
   and re.RiskInstitutionID   = ic.InstitutionID
   and (re.Flag & 32          = 0 
    or re.DateClose           > @Date)
   and re.Flag & 4            = 0
   and rh.RPElementID         = re.RPElementID
   and @Date                 >= rh.DateBegin 
   and @Date                  < rh.DateEnd
   and r.ResourceID           = rh.AccountID
   and (@Del232               = 0
    or r.Brief         not like '47425\%')
   and rhd.RPElementHistoryID =* rh.RPElementHistoryID         
group by ic.InstitutionID

-- select * from #ImpureClient where InstitutionID = 10000063888
-- select * from #ImpureRBR where InstitutionID = 10000063888

--входит ли заемщик в портфель однородных ссуд

insert #ImpurePOS

select ic.InstitutionID,
       1
  from #ImpureClient         ic,
       tRPElement            re   #M_NOLOCK,
       tRPElementHistory     rh   #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       tRPElementHistoryDebt rhd  #M_NOLOCK_INDEX(XPKtRPElementHistoryDebt),      
       tRPElementHistoryDebt rhd2, 
       tRPElementHistory     rh2  #M_NOLOCK_INDEX(XPKtRPElementHistory),
       tRPElement            re2  #M_NOLOCK_INDEX(XPKtRPElement)     

 where 1=1
   and re.RiskInstitutionID   = ic.InstitutionID
   and (re.Flag & 32          = 0 
    or re.DateClose           > @Date)
   and re.Flag & 4            = 0
   and rh.RPElementID         = re.RPElementID
   and @Date                 >= rh.DateBegin 
   and @Date                  < rh.DateEnd 
   and rh.RPElementHistoryID  = rhd.RPElementHistoryID 
   and rhd.AccountID         <> 0
   and rhd2.AccountID         = rhd.AccountID
   and rh2.RPElementHistoryID = rhd2.RPElementHistoryID 
   and @Date                 >= rh2.DateBegin 
   and @Date                  < rh2.DateEnd     
   and re2.RPElementID        = rh2.RPElementID
   and re.RiskInstitutionID  <> re2.RiskInstitutionID
group by ic.InstitutionID   
   
union

select ic.InstitutionID,
       1
  from #ImpureClient     ic  ,
       tRPElement        re  #M_NOLOCK,
       tRPElementHistory rh  #M_NOLOCK_INDEX(XAK1tRPElementHistory),
       tResource         r   #M_NOLOCK_INDEX(XPKtResource),
       tRPElementHistory rh2 #M_NOLOCK,
       tRPElement        re2 #M_NOLOCK_INDEX(XPKtRPElement)     

 where 1=1
   and re.RiskInstitutionID = ic.InstitutionID
   and (re.Flag & 32        = 0 
    or re.DateClose         > @Date)
   and re.Flag & 4          = 0
   and rh.RPElementID       = re.RPElementID
   and @Date               >= rh.DateBegin 
   and @Date                < rh.DateEnd    
   and r.ResourceID           = rh.AccountID
   and (@Del232               = 0
    or r.Brief         not like '47425\%')
   and rh2.AccountID        = rh.AccountID
   and @Date               >= rh2.DateBegin 
   and @Date                < rh2.DateEnd   
   and re2.RPElementID      = rh2.RPElementID
   and re.RiskInstitutionID <> re2.RiskInstitutionID
group by ic.InstitutionID 

--для классификатора связей

update #Link
    set SumProc = (3-2*res.CharType)*r.Rest
   from pAccRestList    r     #M_NOLOCK_INDEX(XPKpAccRestList),
        tResource       res   #M_NOLOCK_INDEX(XPKtResource)
  where r.SPID               = @@spid
    and r.Date               = @Date
    and res.ResourceID       = r.ResourceID        
    and #Link.ResourceProcID = r.ResourceID     
    and #Link.InCalc         = 0

update #Link
    set SumLoan = (3-2*res.CharType)*r.RestBs
   from pAccRestList    r     #M_NOLOCK_INDEX(XPKpAccRestList),
        tResource       res   #M_NOLOCK_INDEX(XPKtResource)
  where r.SPID               = @@spid
    and r.Date               = @Date
    and res.ResourceID       = r.ResourceID        
    and #Link.ResourceLoanID = r.ResourceID     
    and #Link.InCalc         = 0
    
update #Link
    set SumRes = (3-2*res.CharType)*r.Rest
   from pAccRestList    r     #M_NOLOCK_INDEX(XPKpAccRestList),
        tResource       res   #M_NOLOCK_INDEX(XPKtResource)
  where r.SPID               = @@spid
    and r.Date               = @Date
    and res.ResourceID       = r.ResourceID        
    and #Link.ResourceResID  = r.ResourceID     
    and #Link.InCalc         = 0
   
--счета гарантий
--домножаем на курс даты последнего начисления и делим на курс даты расчета

update #Guarantee
   set Base = convert(money,#Guarantee.Base*c3.Course/c2.Course)
  from pCourse c3 #M_NOLOCK_INDEX(XPKE_363),
       pCourse c2 #M_NOLOCK_INDEX(XPKE_363)
 where 1=1
   and c3.SPID      = @@SPID
   and c3.Date      = #Guarantee.DateBegin
   and c3.FundDest  = #Guarantee.FundID
   and c3.FundSrc   = 2       
   and c2.SPID      = @@SPID
   and c2.Date      = @Date
   and c2.FundDest  = #Guarantee.FundID
   and c2.FundSrc   = 2

--------------------------------------------------------------------
--Полученные гарантии и поручительства включаются в отчет со знаком «+» пропорционально
--величине резерва на возможные потери по финансовому инструменту,
-- в обеспечение которого они получены. 
--Полученные гарантии и поручительства для ОВП = остатки на счете 91414*РВПС в % 

--При этом сумма гарантий и поручительств должна сравниваться с суммой основного долга по кредиту:
--Если гарантия > суммы долга, то пропорция считается из суммы, которая не превышает суммы основного долга. 
--Если гарантия < суммы долга, то дополнительно идет сравнение с суммой созданного резерва:
--1) если резерв > гарантии, то полученная гарантия включается полностью
--2) если резерв < гарантии, то гарантии включаются в величине резерва
create table #FP(Number varchar(20)
                ,PrcRes float
                ,RestR  money
                ,RestOD money
                 )

insert #FP
select f1.Number
      ,max(f1.PrcRes)
      ,sum(case when substring(f1.Brief,1,5) in ('45515','45818','45215')
                  then abs(f1.Rest)
                else $0
           end) as Reserv
      ,sum(case when (substring(f1.Brief,1,3) = '455'
                  and substring(f1.Brief,4,2) in ('01','02','03','04','05','06','07','08','09')
                      )
                  or (substring(f1.Brief,1,5) = '45815'
                      )
                  then abs(isnull(f1.Rest,0))
                else $0
           end) as OD
  from #FinPok f1
 group by f1.Number

--------------
--truncate table tFPTest
--insert tFPTest select * from #FP
--------------

--выданные гарантии - без корректировки РБР    
                                            
insert #Guarantee(
                 ResourceID,      
                 DateBegin,
                 ReserveToForming,
                 Base,            
                 Rest,
                 FundID            
                 )
select c.ResourceID,
       '19000101',
       1,
       1,
       0,
       r.FundID    
  from #Classifier       c    #M_NOLOCK_INDEX(XPKClassifier),
       tResource         r    #M_NOLOCK_INDEX(XPKtResource)                             
 where c.Type             = 3
   and r.ResourceID       = c.ResourceID
   and substring(r.Brief,1,5) = '91404' --гарантии выданные    

update #Guarantee
   set Rest = abs(p.Rest)
  from pAccRestList p #M_NOLOCK_INDEX(XPKpAccRestList)
 where p.SPID                = @@SPID
   and p.Date                = @Date
   and #Guarantee.ResourceID = p.ResourceID
   
update #Resource
   set Summe = Summe*(g.ReserveToForming/convert(float,g.Base))
  from #Guarantee g,
       tResource  r  #M_NOLOCK_INDEX(XPKtResource)
 where #Resource.ResourceID   = g.ResourceID
   and r.ResourceID           = g.ResourceID
   and substring(r.Brief,1,5) <> '91404'   


   
insert #Resource(
                ResourceID,
                CharType,
                Position, 
                SecurityID, 
                Summe,    
                Type --счета, остатки которых будут корректироваться через элементы РБР
                )
                
--declare @Date smalldatetime
--select @Date = '20060216'

select p.ResourceID,
       2,
       'Бал',
       2,         --это рублевые счета, валюту получим из РБР
       abs(p.Rest),
       2
  from pAccRestList p #M_NOLOCK_INDEX(XPKpAccRestList)
 where 1=1
   and p.SPID = @@SPID
   and p.Date = @Date
 --  and p.ResourceID = 10002465786
   and not exists (select 1
                     from #Resource
                    where #Resource.ResourceID = p.ResourceID
                      and #Resource.Type       in (1,3,4,5))
   and not exists (select 1
                     from #Guarantee
                    where #Guarantee.ResourceID = p.ResourceID)
   and not exists (select 1
                     from #Classifier #M_NOLOCK_INDEX(XPKClassifier)
                     --счета неполученных процентов
                    where #Classifier.ResourceID = p.ResourceID
                      and #Classifier.Type       = 2)                 
                    
--удаляем рублевые счета гарантий

delete
  from #Guarantee
 where FundID = 2                                                                     


--удаляем счета резервов, для которых найдено больше одной валюты

delete #Resource                  
  from #Resource
 where exists (select r.ResourceID
                 from #ResourceRBR r
                where 1=1
                  and r.ResourceID = #Resource.ResourceID
               group by r.ResourceID
               having count(1) > 1)
               
delete #Resource 
  from #Resource 
 where exists (select r.ResourceID
                 from #ResourceRBR r
                where 1=1
                  and r.ResourceID = #Resource.ResourceID
                  and r.SecurityID = 2)
               
update #Resource
   set SecurityID = r.SecurityID               
  from #ResourceRBR  r
 where r.ResourceID = #Resource.ResourceID
 
delete #ResourceRBR
  from #ResourceRBR
 where SecurityID = 2 
                 
insert #Resource(
                ResourceID,
                CharType,   
                Position,   
                SecurityID, 
                Summe,      
                Type       
                )
select r.ResourceID,
       2,
       'Бал',
       r.SecurityID,
       r.ReserveToForming,
       2
  from #ResourceRBR r
 where 1=1 
   and not exists (select 1
                     from #Resource rs
                    where rs.ResourceID = r.ResourceID)                                  
   
                      
update #Resource 
   set Summe      = convert(money, #Resource.Summe/c.Course) 
  from #ResourceRBR  r ,
       pCourse c  #M_NOLOCK_INDEX(XPKE_363)    
 where r.ResourceID          = #Resource.ResourceID
   and r.SecurityID          = #Resource.SecurityID
   and c.SPID                = @@SPID
   and c.FundDest            = r.SecurityID
   and c.FundDest            <> 2
   and c.FundSrc             = 2
   and c.Date                = r.DateBegin       
                              
-- 27.12.2007 (KDV) begin

if object_id('tempdb..#GuarRests') is not null drop table #GuarRests

create table #GuarRests
  (
  Number varchar(20),
  Rest   money,
  FundID numeric(15,0)
  )

insert #GuarRests  
 (
  Number,
  Rest  ,
  FundID
  )
select fp.Number,
       sum(isnull(fp.Rest,0)),
       fp.FundID
  from #FinPok fp
 where fp.Flag = 4
 group by fp.Number, fp.FundID


insert #Guarantee(ResourceID
                 ,DateBegin
                 ,ReserveToForming
                 ,Base
                 ,Rest
                 ,FundID
                  )
select max(r.ResourceID)
      ,%Date!
      ,max(case 
             when isnull(gr.Rest,0) > f1.RestOD then f1.RestR /isnull(c.Course,1) --f1.RestOD*(f1.PrcRes/100)
             else case 
                    when f1.RestR > isnull(gr.Rest,0) then (isnull(gr.Rest,0))*(f1.PrcRes/100)
                    else f1.RestR*(f1.PrcRes/100)
                  end
           end)
      ,max(f1.PrcRes/100)
      ,max( isnull(gr.Rest,0) )
      ,fp.FundID
  from #FinPok fp
  inner join #FP f1 on f1.Number = fp.Number
  inner join tResource r (index XAK1tResource) on r.Brief = fp.Brief
  inner join #GuarRests gr on gr.Number = fp.Number and gr.FundID = fp.FundID
  inner join pCourse c on c.SPID = @@SPID and c.Date = @EndMonth and c.FundDest  = fp.FundID  and c.FundSrc   = 2
--   left join #FinPok fp2 on fp2.Flag = 4  and fp2.Brief <> fp.Brief  and f1.Number = fp2.Number  and fp2.FundID = fp.FundID
 where fp.Flag = 4
 group by fp.Number, fp.Flag, fp.FundID


--------------
--truncate table tFinPokTest
--insert tFinPokTest select * from #FinPok
--------------

--------------
--truncate table tGuaranteeTest
--insert tGuaranteeTest select * from #Guarantee
--------------

/*

insert #Guarantee(ResourceID
                 ,DateBegin
                 ,ReserveToForming
                 ,Base
                 ,Rest
                 ,FundID
                  )
select r.ResourceID
      ,%Date!
      ,case when fp.Rest > f1.RestOD
              then f1.RestOD*(f1.PrcRes/100)
            else case when f1.RestR > fp.Rest
                        then fp.Rest*(f1.PrcRes/100)
                      else f1.RestR*(f1.PrcRes/100)
                 end
       end
--      ,fp.Rest*(f1.PrcRes/100)
      ,f1.PrcRes/100
      ,fp.Rest
      ,fp.FundID
  from #FinPok   fp
      ,tResource r   (index XAK1tResource)
      ,#FP       f1
 where fp.Flag = 4
   and r.Brief = fp.Brief
   and f1.Number = fp.Number


*/
-- 27.12.2007 (KDV) end

--------------------------------------------------------------------
select @@RowCount   
              
}

@SQL9@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
--select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

   
--в таблицу результатов:        
--балансовая

insert #Exclude
select ocr.ObjectID,
       1
  from tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier),
       tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation)
 where 1=1
   and oc.ObjType          = 3
   and oc.ParentID         = @634Synthetic
   and oc.Brief            = 'БалансоваяИскл'
   and ocr.ObjClassifierID = oc.ObjClassifierID
   and ocr.ObjType         = 3       

insert #Resultat(
                ResourceID,
                ObjectBrief, 
                Position,    
                SecNumber,
                SecBrief,
                SecurityID,   
                Summe,       
                Direction   
                )
select r.ResourceID,
       substring(r.ParentMask,3,1)+substring(r.ParentMask,5,2)+rtrim(r.Brief), 
       'Бал',   
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       isnull((b.BalanceOutDE - BalanceOutCE),0),
       'Поз'
  from #Balance  b,
       tResource r  #M_NOLOCK_INDEX(XPKtResource),
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where b.DomainID   = @A
   and r.ResourceID = b.ResourceID                       
   and s.CurrencyID = b.FundID
   and not exists (select 1
                     from #Exclude e
                    where e.ResourceID = b.ResourceID
                      and e.Type       = 1)
   and s.CurrencyID <> 2                                             

select 9
}

@SQL10@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

 select @DateStr = convert(char(8), @Date, 112)
 --select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--cпот

insert #Exclude
select ocr.ObjectID,
       2
  from tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier),
       tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation)
 where 1=1
   and oc.ObjType          = 3
   and oc.ParentID         = @634Synthetic
   and oc.Brief            = 'СПОТИскл'
   and ocr.ObjClassifierID = oc.ObjClassifierID
   and ocr.ObjType         = 3       

insert #Resultat(
                ResourceID,
                ObjectBrief,
                Position,
                SecNumber,
                SecBrief,
                SecurityID,
                Summe,
                Direction
                )
select r.ResourceID,
       substring(r.ParentMask,5,3)+rtrim(r.Brief),
       'Спт',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       isnull((b.BalanceOutDE - BalanceOutCE),0),
       'Поз'
  from #Balance  b,
       tResource r  #M_NOLOCK_INDEX(XPKtResource),
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where b.DomainID                  = @G
   and r.ResourceID                = b.ResourceID                       
   and s.CurrencyID                = b.FundID
   and substring(r.ParentMask,3,1) = '1'
   and not exists (select 1
                     from #Exclude e
                    where e.ResourceID = b.ResourceID
                      and e.Type       = 2)
   and s.CurrencyID <> 2 
   
select 10    

}

@SQL11@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR
        
 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
 --select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--срочная

                      
insert #Exclude
select ocr.ObjectID,
       3
  from tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier),
       tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation)
 where 1=1
   and oc.ObjType          = 3
   and oc.ParentID         = @634Synthetic
   and oc.Brief            = 'СрочнаяИскл'
   and ocr.ObjClassifierID = oc.ObjClassifierID
   and ocr.ObjType         = 3       

insert #Resultat(
                ResourceID,
                ObjectBrief,
                Position,
                SecNumber,
                SecBrief,
                SecurityID,
                Summe,
                Direction
                )
select r.ResourceID,
       substring(r.ParentMask,5,3)+rtrim(r.Brief),
       'Срч',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,       
       isnull((b.BalanceOutDE - BalanceOutCE),0),
       'Поз'
  from #Balance  b,
       tResource r #M_NOLOCK_INDEX(XPKtResource),
       tCurrency s #M_NOLOCK_INDEX(XPKtCurrency)
 where b.DomainID                  = @G
   and r.ResourceID                = b.ResourceID                       
   and s.CurrencyID                = b.FundID
   and substring(r.ParentMask,3,1) in ('2','3','4')
   and not exists (select 1
                     from #Exclude e
                    where e.ResourceID = b.ResourceID
                      and e.Type       = 3)
   and s.CurrencyID <> 2
   
select 11    

}

@SQL12@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
--select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--опционная

   
insert #Resultat(
                ResourceID,
                ObjectBrief,
                Position,
                SecNumber,
                SecBrief,
                SecurityID,
                Summe,
                Direction
                )
select r.ResourceID,
       substring(r.ParentMask,5,3)+rtrim(r.Brief),
       'Опц',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       (3-2*r.CharType)*isnull(rc.Summe,0),
       'Поз'
  from #Resource rc,
       tResource r  #M_NOLOCK_INDEX(XPKtResource),
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where 1=1
   and rc.Type                     = 6
   and r.ResourceID                = rc.ResourceID
   and s.CurrencyID                = rc.SecurityID
   and s.CurrencyID               <> 2

select 12
}           

@SQL13@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

 select @DateStr = convert(char(8), @Date, 112)
 --select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--гарантии

-- 27.12.2007 (KDV) begin

insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
select r.ResourceID,
       r.Brief,
       'Гар',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       case when substring(r.Brief,1,5)<> '91404'
            then case when g.Base = 0
                      then 0
                      else isnull(convert(money,abs(g.ReserveToForming)),0)
                 end     
            else isnull(abs(g.Rest),0)
       end,
       'Поз'
  from #Guarantee g,
       tCurrency  s #M_NOLOCK_INDEX(XPKtCurrency),
       tResource  r #M_NOLOCK_INDEX(XPKtResource)
 where 1=1
   and s.CurrencyID = g.FundID
   and r.ResourceID = g.ResourceID
   and not exists (select 1
                     from #Resource rc #M_NOLOCK_INDEX(XPKResource)
                    where rc.Type       = 4
                      and rc.ResourceID = g.ResourceID)

/*
select r.ResourceID,
       r.Brief,
       'Гар',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.SecurityID,
       case when substring(r.Brief,1,5)<> '91404'
            then case when g.Base = 0
                      then 0
                      else isnull(convert(money,(3-2*r.CharType)*g.ReserveToForming),0)
                 end     
            else isnull((3-2*r.CharType)*g.Rest,0)
       end,
       'Поз'
  from #Guarantee g,
       tSecurity  s #M_NOLOCK_INDEX(XPKtSecurity),
       tResource  r #M_NOLOCK_INDEX(XPKtResource)
 where 1=1
   and s.SecurityID = g.FundID
   and r.ResourceID = g.ResourceID
   and not exists (select 1
                     from #Resource rc #M_NOLOCK_INDEX(XPKResource)
                    where rc.Type       = 4
                      and rc.ResourceID = g.ResourceID)
*/

-- 27.12.2007 (KDV) end

select 13                     
} 

@SQL14@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
--select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--аккредитивы

   
insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction
                )
select r.ResourceID,
       ltrim(rtrim(r.Brief)), 
       'Гар',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       isnull(convert(int,c.Comment)*(3-2*r.CharType)*abs(p.Rest),0),
       'Поз'
  from #Classifier c  #M_NOLOCK_INDEX(XPKClassifier),
       tResource   r  #M_NOLOCK_INDEX(XPKtResource),
       tCurrency   s  #M_NOLOCK_INDEX(XPKtCurrency),
       pAccRestList p #M_NOLOCK_INDEX(XPKpAccRestList)
 where 1=1
   and c.Type       = 4
   and r.ResourceID = c.ResourceID
   and s.CurrencyID = r.FundID
   and s.CurrencyID <> 2
   and p.SPID       = @@SPID
   and p.Date       = @Date
   and p.ResourceID = r.ResourceID
   
select 14   

}  

@SQL15@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
--select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--резервы

insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction,
                Portfolio
                )
                
select r.ResourceID,
       ltrim(rtrim(r.Brief)),
       'Бал',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       isnull((3-2*r.CharType)*rc.Summe,0),
       'Рез',
       ''
  from #Resource rc #M_NOLOCK_INDEX(XPKResource),
       tResource r  #M_NOLOCK_INDEX(XPKtResource),  
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)  
 where 1=1
   and rc.Type      in (1,2)
   and r.ResourceID = rc.ResourceID
   and s.CurrencyID = rc.SecurityID
   and s.CurrencyID <> 2
union
select fp.ExpID
      ,fp.Brief
      ,'Бал'
      ,ltrim(rtrim(s.Number))
      ,ltrim(rtrim(s.Brief))
      ,s.CurrencyID
      ,l.SumRes
      ,'Рез'
      ,''
  from #FinPok   fp
      ,#Link     l
      ,#FinPok   f1
      ,tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where 1 = 1
   and l.ResourceResID = fp.ExpID
   and f1.ExpID        = l.ResourceLoanID
   and s.CurrencyID    = f1.FundID
union
select r.ResourceID
      ,r.Brief
      ,'Бал'
      ,ltrim(rtrim(s.Number))
      ,ltrim(rtrim(s.Brief))
      ,s.CurrencyID
      ,r.Rest
      ,'Рез'
      ,Portfolio
  from #CardRVPS r
      ,tResource r0 #M_NOLOCK_INDEX(XPKtResource)
      ,tInstAttr ia #M_NOLOCK_INDEX(XPKtInstAttr)
      ,tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where 1 = 1
   and r0.ResourceID    = r.ResourceID
   and ia.InstitutionID = r0.InstOwnerID
   and s.CurrencyID     = r.FundID

select 15   

}

@SQL16@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
--select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------
--иные активы/пассивы в рублях


insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
select r.ResourceID,
       ltrim(rtrim(r.Brief)),
       rc.Position,
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       isnull((3-2*r.CharType)*rc.Summe,0),
       'ИнР'
  from #Resource rc #M_NOLOCK_INDEX(XPKResource),
       tResource r  #M_NOLOCK_INDEX(XPKtResource),  
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)  
 where 1=1
   and rc.Type      = 4
   and r.ResourceID = rc.ResourceID
   and s.CurrencyID = rc.SecurityID
   and s.CurrencyID <> 2 
   
select 16   

}

@SQL17@=SQL{

#M_FORCEPLAN

--set arithabort off
--set arithabort on

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

 select @DateStr = convert(char(8), @Date, 112)
 --select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT 
--------------------------------------------------------------

--счета неполученных процентов
--drop table #Resultat_Help
--select * from #Resultat_Help where IsPOS = 1
/*create table #Resultat_Help(
                                        ResourceID numeric(15,0),
                                        ObjectBrief  varchar(20),
                                        SecNumber  varchar(3),
                                        SecBrief       varchar(20),
                                        SecurityID    numeric(15,0),
                                        IsPOS         tinyint,
                                        pRest         money,
                                        ieRestBs     money,
                                        ieRest         money,
                                        irReserveToForming money,
                                        ieInstitutionID numeric(15,0),
                                        irInstitutionID numeric(15,0),
                                        rCharType      int
                                        )
insert #Resultat_Help(
                                        ResourceID ,
                                        ObjectBrief ,
                                        SecNumber  ,
                                        SecBrief   ,
                                        SecurityID ,
                                        IsPOS    ,
                                        pRest      ,
                                        ieRestBs   ,
                                        ieRest     ,
                                        irReserveToForming ,
                                        ieInstitutionID ,
                                        irInstitutionID,
                                        rCharType     
                         
                              )
select r.ResourceID,
          ltrim(rtrim(r.Brief)),
          ltrim(rtrim(s.Number)),
          ltrim(rtrim(s.Brief)),
          s.CurrencyID,
          isnull(ip.IsPOS,0),
          p.Rest,
          isnull(ie.RestBs,0),
          isnull(ie.Rest,0),
          isnull(ir.ReserveToForming,0),
          isnull(ie.InstitutionID,%InstitutionID!),
          isnull(ir.InstitutionID,%InstitutionID!),
          r.CharType
  from #Classifier           c  #M_NOLOCK_INDEX(XPKClassifier)
       inner join tResource  r  #M_NOLOCK_INDEX(XPKtResource)
       on r.ResourceID  = c.ResourceID
       inner join pAccRestList  p  #M_NOLOCK_INDEX(XPKpAccRestList) 
       on  p.SPID       = @@SPID
       and p.Date       = @Date
       and p.ResourceID = r.ResourceID
       inner join tCurrency     s   #M_NOLOCK_INDEX(XPKtCurrency)  --#M_NOLOCK_INDEX(XPKtSecurity)
       on s.CurrencyID  = r.FundID
       left outer join #ImpurePOS ip
       on ip.InstitutionID = r.InstOwnerID
       left outer join #ImpureRBR ir
       on ir.InstitutionID = r.InstOwnerID
       left outer join #ImpureRests ie
       on ie.InstitutionID = r.InstOwnerID
 where 1=1
   and c.Type = 2  
   
insert #Resultat(
                ResourceID, 
                ObjectBrief,
                Position,   
                SecNumber,  
                SecBrief,   
                SecurityID, 
                Summe,      
                Direction      
                )
select ResourceID,
       ObjectBrief,
       'Неч',
       SecNumber,
       SecBrief,
       SecurityID,
       isnull((
       case when IsPOS = 1
            then case when ieRestBs <> 0 and not isnull(irInstitutionID,%InstitutionID!) = %InstitutionID!
                      then round(pRest * (abs(ieRestBs) - abs(isnull(irReserveToForming,0))/convert(float,abs(ieRestBs))) * (1+ sign( sign(pRest * ((abs(ieRestBs) - abs(isnull(irReserveToForming,0)))/abs(ieRestBs))) - 1)),4)
                      else (3-2*rCharType)*abs(pRest)
                 end
            when IsPOS = 0     
            then case when ieRestBs <> 0 and not isnull(ieInstitutionID,%InstitutionID!) = %InstitutionID!
                      then round(pRest*((abs(ieRestBs) - abs(ieRest))/convert(float,abs(ieRestBs))))* (1+ sign( sign(pRest * ((abs(ieRestBs) - abs(isnull(ieRest,0)))/abs(ieRestBs))) - 1))                      
                      else (3-2*rCharType)*abs(pRest) 
                 end     
            
            else 0                 
       end),0),
       'Поз'
from #Resultat_Help
where 1=1 */
                                  
insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                ) 
                
--declare @Date smalldatetime
--select @Date = '20060219'                                                        

select isnull(r.ResourceID,0),
       isnull(ltrim(rtrim(r.Brief)),''),
       'Неч',
       isnull(ltrim(rtrim(s.Number)),''),
       isnull(ltrim(rtrim(s.Brief)),''),
       isnull(s.CurrencyID,0),
       isnull((
       case when isnull(ip.IsPOS,0)= 1
            then case when isnull(ie.RestBs,0) <> 0 and not isnull(ir.InstitutionID,%InstitutionID!) = %InstitutionID!
                      then round(convert(money, p.Rest * ((abs(ie.RestBs) - abs(isnull(ir.ReserveToForming,0)))/convert(float,abs(ie.RestBs)))) * (1+ sign( sign(p.Rest * ((abs(ie.RestBs) - abs(isnull(ir.ReserveToForming,0)))/abs(ie.RestBs))) - 1)),4)
                      else (3-2*r.CharType)*abs(p.Rest)
                 end
            else case when isnull(ie.RestBs,0) <> 0 and not isnull(ie.InstitutionID,%InstitutionID!) = %InstitutionID!
                      then round(convert(money, p.Rest * ((abs(ie.RestBs) - abs(isnull(ie.Rest,0)))/convert(float,abs(ie.RestBs)))) * (1+ sign( sign(p.Rest * ((abs(ie.RestBs) - abs(isnull(ie.Rest,0)))/abs(ie.RestBs))) - 1)),2)                      
                      else (3-2*r.CharType)*abs(p.Rest)
                 end
       end),0),
       'Поз'     
  from #Classifier           c  #M_NOLOCK_INDEX(XPKClassifier)
       inner join tResource  r  #M_NOLOCK_INDEX(XPKtResource)
       on r.ResourceID  = c.ResourceID   
       inner join pAccRestList  p  #M_NOLOCK_INDEX(XPKpAccRestList) 
       on  p.SPID       = @@SPID
       and p.Date       = @Date
       and p.ResourceID = r.ResourceID
       inner join tCurrency     s  #M_NOLOCK_INDEX(XPKtCurrency)
       on s.CurrencyID  = r.FundID
       left outer join #ImpurePOS ip
       on ip.InstitutionID = r.InstOwnerID
       left outer join #ImpureRBR ir
       on ir.InstitutionID = r.InstOwnerID
       left outer join #ImpureRests ie
       on ie.InstitutionID = r.InstOwnerID
 where 1=1
   and c.Type = 2
--order by c.ResourceID   
   
--select 17
--select * from #Resultat where Position = 'Неч' and  Summe <> 0
--delete #Resultat from #Resultat where Position = 'Неч'     
   
if exists (select 1 from #Link where 1=1)
begin
delete #Resultat 
  from #Resultat,
       #Link   
 where #Resultat.ResourceID = #Link.ResourceProcID 
end

insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
                
select r.ResourceID,
       ltrim(rtrim(r.Brief)),
       'Неч',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       isnull(convert(money, l.SumProc*convert(money,((l.SumLoan - l.SumRes)/l.SumLoan))),0),
       'Поз'  
  from #Link     l,
       tResource r #M_NOLOCK_INDEX(XPKtResource),
       tCurrency s #M_NOLOCK_INDEX(XPKtCurrency)
 where 1=1
   --------------------
   and l.InCalc     = 0
   --------------------
   and r.ResourceID = l.ResourceProcID
   and s.CurrencyID = r.FundID
#M_FORCEORDER

insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
select l.ResourceProcID
      ,fp.Brief
      ,'Неч'
      ,s.Number
      ,s.Brief
      ,s.CurrencyID
      ,l.ResToUse--isnull(convert(money, l.SumProc*convert(money,(l.SumLoan - l.SumRes)/l.SumLoan)),0)
      ,'Поз'
  from #Link     l
      ,#FinPok   fp
      ,tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)
 where 1 = 1
   and l.InCalc     = 1
   and fp.ExpID     = l.ResourceProcID
   and s.CurrencyID = fp.FundID
#M_FORCEORDER

insert #Resultat
select r.ResourceID
      ,r.Brief
      ,'Неч'
      ,s.Number
      ,s.Brief
      ,s.CurrencyID
      ,r.ResToUse
      ,'Поз'
      ,''
  from #AccForProcess r
      ,tCurrency      s  #M_NOLOCK_INDEX(XPKtCurrency)
 where 1 = 1
   and s.CurrencyID = r.FundID
#M_FORCEORDER

select 17 
}

@SQL18@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
--select @Date = dateadd(dd,-1, @Date)

declare @A numeric(15,0)

select @A = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 47   --Раздел А
#M_ISOLAT

declare @G numeric(15,0)

select @G = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 51  --Раздел Г
 
declare @W numeric(15,0)
select @W = ID 
  from tConfigParam #M_NOLOCK_INDEX(XPKtConfigParam)
 where Type = 50  --Раздел В 
        
declare @634Synthetic numeric(15,0)
 select @634Synthetic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Синтетика'
#M_ISOLAT

    
declare @634Analytic numeric(15,0)
 select @634Analytic = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 3
    and oc.ParentID = 0
    and oc.Brief    = '634Аналитика'
#M_ISOLAT
        
--отбираем все лицевые счета под проклассифицированными балансовыми

declare @634ReserveS numeric(15,0)
 select @634ReserveS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Резервы'
#M_ISOLAT

declare @634ImpureS numeric(15,0)
 select @634ImpureS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Нечистая'
#M_ISOLAT

declare @634GuaranteeS numeric(15,0)
 select @634GuaranteeS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Гарантии'
#M_ISOLAT

declare @634AkkreditivS numeric(15,0)
 select @634AkkreditivS = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType          = 3
    and oc.ParentID         = @634Synthetic                     
    and oc.Brief            = 'Аккредитивы'
#M_ISOLAT

--------------------------------------------------------------

--счета, исключаемые из расчета

insert #Resultat(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
select r.ResourceID,
       ltrim(rtrim(r.Brief)),
       rc.Position,
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,       
       isnull((2*r.CharType-3)*rc.Summe,0),
       'Иск'
  from #Resource rc #M_NOLOCK_INDEX(XPKResource),
       tResource r  #M_NOLOCK_INDEX(XPKtResource),  
       tCurrency s  #M_NOLOCK_INDEX(XPKtCurrency)  
 where 1=1
   and rc.Type      = 3
   and r.ResourceID = rc.ResourceID
   and s.CurrencyID = rc.SecurityID
   and s.CurrencyID <> 2
   and not exists (select 1
                     from #Classifier c #M_NOLOCK_INDEX(XPKClassifier)
                    where c.Type = 1
                      and c.ResourceID = rc.ResourceID)
                                                       

--если счет проклассифицирован рубрикой "Инвертировать", меняем знак

update #Resultat
   set Summe = (-1)*#Resultat.Summe
  from #Resource r #M_NOLOCK_INDEX(XPKResource)
 where 1=1
   and r.Type = 7
   and #Resultat.ResourceID = r.ResourceID
   
select 18   

}

@SQL3@=SQL{

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR
       
 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)
-- 27.12.2007 (KDV) begin

if Object_id('tempdb..#Resultat2') is not null drop table #Resultat2

create table #Resultat2(
                      ID          numeric(15,0) identity,
                      ResourceID  numeric(15,0) null, 
                      ObjectBrief varchar(20) null,    --балансовый счет + валюта или лицевой счет
                      Position    varchar(3) null,     --позиция формы
                      SecNumber   varchar(3) null,     --номер валюты
                      SecBrief    varchar(25) null,    --сокращение валюты
                      SecurityID  numeric(15,0) null,  --идентификатор валюты
                      Summe       money null,          --сумма, включаемая в отчет
                      Direction   varchar(3),          --Поз, Рез, ИнР - положение в ячейке
                      Portfolio   varchar(3) null      --портфель --18.07.2007 MAF 
                      )


insert #Resultat2(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
select distinct
       r2.ResourceID,
       r2.Brief,
       'Гар',
       ltrim(rtrim(s.Number)),
       ltrim(rtrim(s.Brief)),
       s.CurrencyID,
       abs(isnull(f2.Rest,0)),
       'Поз'
  from #Resultat  rt,
       tResource  r #M_NOLOCK_INDEX(XPKtResource),
       #FinPok    f1,
       #FinPok    f2,
       tResource  r2,
       tCurrency  s #M_NOLOCK_INDEX(XPKtCurrency)
 where 1=1
   and rt.Position  = 'Гар'
   and rt.Direction = 'Поз'
   and r.ResourceID = rt.ResourceID
   and substring(r.Brief,1,5) in ('91414','91312')
   and f1.Brief = r.Brief
   and f1.Number = f2.Number
   and r2.Brief  = f2.Brief
   and substring(r2.Brief,1,5) in ('91414','91312')
   and s.CurrencyID = r2.FundID
   and not exists (select 1
                     from #Resource rc #M_NOLOCK_INDEX(XPKResource)
                    where rc.Type       = 4
                      and rc.ResourceID = r2.ResourceID)


insert #Resultat2(
                ResourceID,
                ObjectBrief,      
                Position,  
                SecNumber,
                SecBrief,
                SecurityID,  
                Summe,      
                Direction   
                )
select distinct
       ResourceID,
       ObjectBrief,      
       Position,  
       SecNumber,
       SecBrief,
       SecurityID,  
       Summe,      
       Direction   
  from #Resultat
 where 1=1
   and Position  <> 'Гар'


select distinct
       ObjectBrief          as ObjectBrief,      
       isnull(Position,'')  as Position,  
       isnull(SecNumber,'') as SecNumber,  
       round(Summe,2)       as Summe,      
       Direction            as Direction,
       @Date                as Date,
       Portfolio            as Portfolio
  from #Resultat2
 where 1=1
   and Summe <> 0  
order by Position, Direction, ObjectBrief, SecNumber

-- 27.12.2007 (KDV) end
}

@SQL31@=SQL{

-- 27.12.2007 (KDV) begin
declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)

select distinct
       r2.Brief                as ObjectBrief,
       isnull(rt.Position,'')  as Position,  
       isnull(rt.SecNumber,'') as SecNumber,  
       abs(round(rt.Summe,2))  as Summe,      
       rt.Direction            as Direction,
       @Date                   as Date,
       rt.Portfolio            as Portfolio
  from #Resultat rt,
       tResource  r #M_NOLOCK_INDEX(XPKtResource),
       #FinPok    f1,
       #FinPok    f2,
       tResource  r2
 where 1=1
   and rt.Summe <> 0  
   and rt.Position  = 'Гар'
   and rt.Direction = 'Поз'
   and r.ResourceID = rt.ResourceID
   and substring(r.Brief,1,5) in ('91414','91312')
   and f1.Brief = r.Brief
   and f1.Number = f2.Number
   and r2.Brief  = f2.Brief
   and substring(r2.Brief,1,3) = '455'
   and substring(r2.Brief,4,2) <> '15'

-- 27.12.2007 (KDV) end
}

@SQL5@=SQL{

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)

declare @OGRN_ID numeric(15,0)

select @OGRN_ID = PropertyUsrID
  from tPropertyUsr #M_NOLOCK_INDEX(XAK1tPropertyUsr)
 where PropertyType = 51
   and Brief = 'ГосРегНом'
#M_ISOLAT

declare @NOM_KR_ID numeric(15,0)

select @NOM_KR_ID = PropertyUsrID
  from tPropertyUsr #M_NOLOCK_INDEX(XAK1tPropertyUsr)
 where PropertyType = 51
   and Brief = 'НомКрОрг'
#M_ISOLAT

select rtrim(i.Name)                           as BankName,
       rtrim(isnull(ia2.Address4, i.Address3)) as Address,
       rtrim(c.COATO)                          as SOATO,
       rtrim(i.OKPO)                           as OKPO,
       rtrim(isnull(lm.NumDoc, iam.RegNumber)) as MainRegNo,
       rtrim(isnull(lm2.NumDoc, ia.RegNumber)) as RegNumber,
       rtrim(i.BIC)                            as BIC,
       @Date                                   as Date
  from tInstitution  i   #M_NOLOCK_INDEX(XPKtInstitution),
       tInstAttr     ia  #M_NOLOCK_INDEX(XPKtInstAttr),
       tInstAttr2    ia2 #M_NOLOCK_INDEX(XPKtInstAttr2),
       tInstAttr     iam #M_NOLOCK_INDEX(XPKtInstAttr),
       tCountry      c   #M_NOLOCK_INDEX(XPKtCountry),
       tInstLicense  lm  #M_NOLOCK_INDEX(XAK1tInstLicense),
       tInstLicense  lm2 #M_NOLOCK_INDEX(XAK1tInstLicense)
 where i.InstitutionID    =  2000
   and c.CountryID        =* i.InstGroupID
   and ia.InstitutionID   =  i.InstitutionID
   and ia2.InstitutionID  =* i.InstitutionID
   and iam.InstitutionID  =  2000
   and lm.Type            =  1
   and lm.InstitutionID   =* iam.InstitutionID
   and lm.DocTypeID       =  @OGRN_ID
   and lm2.Type           =  1
   and lm2.InstitutionID  =* i.InstitutionID
   and lm2.DocTypeID      =  @NOM_KR_ID
}

@SQL6@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)

declare @DateCourse smalldatetime       
 select @DateCourse = @Date--dateadd(dd,-1,@Date)
 
declare @ObjClassifierID numeric(15,0)
 select @ObjClassifierID = oc.ObjClassifierID
   from tObjClassifier oc #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where oc.ObjType  = 2
    and oc.ParentID = 0
    and oc.Brief    = '634Лимиты'      
 
create table #Form(
                  SecurityID    numeric(15,0),
                  SecBrief      varchar(25),
                  Bal           money,
                  BalOth        money,
                  BalRes        money,
                  Spot          money,
                  SpotOth       money,
                  Term          money,
                  TermOth       money,
                  Opt           money,
                  OptOth        money,
                  Guar          money,
                  GuarOth       money,
                  AggBal        money,
                  AggOffBal     money,
                  Procent       money,
                  OpenPos       money,
                  Course        numeric(16,10),
                  RubLong       money,
                  RubShort      money,
                  OpenProc      money,
                  Limit         numeric(5,2),
                  OpenOverProc  money,
                  CheckValue    money
                  )         
if @Reg3 = 0

begin
                  
insert #Form          
select r.SecurityID,
       max(ltrim(rtrim(r.SecBrief))),
       sum(case when r.Position = 'Бал'
                then r.Summe
                else 0
           end)  as Bal,
       sum(case when r.Position = 'Бал' and r.Direction in ('Рез','ИнР')
                then r.Summe
                else 0
           end)  as BalOth,
       sum(case when r.Position = 'Бал' and r.Direction = 'Рез'
                then r.Summe
                else 0
           end) as BalRes,
       sum(case when r.Position = 'Спт'
                then r.Summe
                else 0
           end) as Spot,
       sum(case when r.Position = 'Cпт' and r.Direction = 'ИнР' and r.SecurityID = 2 --rs.FundID = 2
                then r.Summe
                else 0
           end) as SpotOth,
       sum(case when r.Position = 'Срч'
                then r.Summe
                else 0
           end) as Term,
       sum(case when r.Position = 'Срч' and r.Direction = 'ИнР' and r.SecurityID = 2 --rs.FundID = 2
                then r.Summe
                else 0
           end) as TermOth,
       sum(case when r.Position = 'Опц'
                then r.Summe
                else 0
           end) as Opt,    
       sum(case when r.Position = 'Опц' and r.Direction = 'ИнР' and r.SecurityID = 2 --rs.FundID = 2
                then r.Summe
                else 0
           end) as OptOth,
       sum(case when r.Position = 'Гар'
                then r.Summe
                else 0
           end) as Guar,
       sum(case when r.Position = 'Гар' and r.Direction = 'ИнР' and r.SecurityID = 2 --rs.FundID = 2
                then r.Summe
                else 0
           end) as GuarOth,
       sum(case when r.Position in ('Бал','Спт')
                then r.Summe
                else 0
           end) as AggBal,           
       sum(case when r.Position in ('Срч','Опц','Гар','Неч')
                then r.Summe
                else 0
           end) as AggOffBal,
       sum(case when r.Position in ('Неч')
                then r.Summe
                else 0
           end) as Procent,
       sum(isnull(r.Summe,0)) as OpenPos,
       max(c.Course)          as Course,
       0                      as RubLong,
       0                      as RubShort,
       0                      as OpenProc,
       10                     as Limit,
       0                      as OpenOverProc,
       0                      as CheckValue 
                                                        
  from #Resultat       r
--      ,tResource       rs   #M_NOLOCK_INDEX(XPKtResource)
      ,pCourse         c    #M_NOLOCK_INDEX(XPKE_363)
/*       inner join tResource       rs   #M_NOLOCK_INDEX(XPKtResource)
       on rs.ResourceID = r.ResourceID
       inner join pCourse         c   #M_NOLOCK_INDEX(XPKE_363)
       on c.SPID      = @@SPID
       and c.Date      = @DateCourse
       and c.FundDest  = r.SecurityID*/
 where 1=1
--   and rs.ResourceID = r.ResourceID
   and c.SPID        = @@SPID
   and c.Date        = @DateCourse
   and c.FundDest    = r.SecurityID
 group by r.SecurityID
#M_FORCEORDER

end

else

begin

declare @SampleID numeric(15,0)       
       
 select  @SampleID = SampleID    
   from  tSample     #M_NOLOCK_INDEX(XAK0tSample)
  where  Brief  =  'Форма634'
#M_ISOLAT

if @Branch<>0
begin

insert #Branch values (@Branch)
end

else

begin

insert #Branch
select ID
  from tDocMark dm #M_NOLOCK_INDEX(XPKtDocMark)
 where 1=1
   and dm.SPID = @@SPID
   and dm.Type = 41
      
end                        

if not exists (select 1 from #Branch)
insert #Branch values (2000)

insert #Form
select s.CurrencyID,
       max(s.Brief),
       sum(case when et.TypeNumber = 1
                then ev.ExponentValue
                else 0
           end)              as Bal,
       sum(case when et.TypeNumber = 2
                then ev.ExponentValue
                else 0
           end)              as BalOth,
       sum(case when et.TypeNumber = 3
                then ev.ExponentValue
                else 0
           end)              as BalRes,
       sum(case when et.TypeNumber = 4
                then ev.ExponentValue
                else 0
           end)              as Spot,
       sum(case when et.TypeNumber = 5
                then ev.ExponentValue
                else 0
           end)              as SpotOth,
       sum(case when et.TypeNumber = 6
                then ev.ExponentValue
                else 0
           end)              as Term,
       sum(case when et.TypeNumber = 7
                then ev.ExponentValue
                else 0
           end)              as TermOth,
       sum(case when et.TypeNumber = 8
                then ev.ExponentValue
                else 0
           end)              as Opt,
       sum(case when et.TypeNumber = 9
                then ev.ExponentValue
                else 0
           end)              as OptOth,
       sum(case when et.TypeNumber = 10
                then ev.ExponentValue
                else 0
           end)              as Guar,
       sum(case when et.TypeNumber = 11
                then ev.ExponentValue
                else 0
           end)              as GuarOth,
       sum(case when et.TypeNumber in (1,4)
                then ev.ExponentValue
                else 0
           end)              as AggBal,
       sum(case when et.TypeNumber in (6,8,10,14)
                then ev.ExponentValue
                else 0
           end)              as AggOffBal,
       sum(case when et.TypeNumber = 14
                then ev.ExponentValue
                else 0
           end)              as Procent,
       sum(case when et.TypeNumber in (1,4,6,8,10,14)
                then ev.ExponentValue
                else 0
           end)              as OpenPos,
       max(case when et.TypeNumber = 16
                then ev.ExponentValue
                else 0
           end)              as Course,
       0                     as RubLong,
       0                     as RubShort,
       0                     as OpenProc,
       10                    as Limit,
       0                     as OpenOverProc,
       0                     as CheckValue   
           
          
  from tExponent      e  #M_NOLOCK_INDEX(XAK1tExponent),
       tExpValType    et #M_NOLOCK_INDEX(XAK1tExpValType),
       tExponentValue ev #M_NOLOCK_INDEX(XPKtExpValues),
       tCurrency      s  #M_NOLOCK_INDEX(XAK1tCurrency),
       #Branch        b

 where 1=1
   and e.SampleID      = @SampleID
   and et.SampleID     = @SampleID 
   and ev.ExponentID   = e.ExponentID       
   and ev.ExpValTypeID = et.ExpValTypeID
   and ev.ExponentDate = @DateStr
   and s.Brief         = ltrim(rtrim(e.Brief))
   and (@Svod          = 1
    or  ev.BranchID    = b.BranchID)
group by s.CurrencyID   
#M_FORCEORDER

end  

/* Досин П.Г. - Доработка согласно заявке 103014 */  

update #Form
set AggOffBal = (round(round(Term,1)/1000,4) + round(round(Opt,1)/1000,4) + round(round(Guar,1)/1000,4) + round(round(Procent,1)/1000,4)) * 1000.00

-------------------------------------------

update #Form
   set Limit = convert(float,isnull(oc.Param,'10'))
  from tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier)
       left outer join tObjClsRelation ocr #M_NOLOCK_INDEX(XIE0tObjClsRelation)
       on ocr.ObjClassifierID  = oc.ObjClassifierID,
       tInstitution i #M_NOLOCK_INDEX(XPKtInstitution)
 where oc.ObjType          = 2
   and oc.ParentID         = @ObjClassifierID 
   and ocr.ObjectID        = #Form.SecurityID
   and i.InstitutionID     = isnull(nullif(@Branch,0),2000)
   and oc.Comment          = ltrim(rtrim(i.Portal))
 
                                                                                      
update #Form
   set RubLong      = case when OpenPos > 0
                           then (round(round(Bal,1)/1000,4)+     
                                round(round(Spot,1)/1000,4)+    
                                round(round(AggOffBal,1)/1000,4))*Course*1000                           
                           else 0
                      end,      
       RubShort     = case when OpenPos < 0                    
                           then (round(round(Bal,1)/1000,4)+     
                                round(round(Spot,1)/1000,4)+    
                                round(round(AggOffBal,1)/1000,4))*Course*1000                           
                           else 0                            
                      end,
       OpenProc     = isnull((abs(round(round(Bal,1)/1000,4)+
                                  round(round(Spot,1)/1000,4)+
                                  round(round(AggOffBal,1)/1000,4))*Course*100/@Capital),0),
       
       OpenOverProc = 0,/*case when (abs(round(round(Bal,1)/1000,4)+     
                                     round(round(Spot,1)/1000,4)+    
                                     round(round(AggOffBal,1)/1000,4))*Course-Limit*@Capital/100)*100/@Capital > 0
                           then (abs(round(round(Bal,1)/1000,4)+     
                                     round(round(Spot,1)/1000,4)+    
                                     round(round(AggOffBal,1)/1000,4))*Course-Limit*@Capital/100)*100/@Capital
                           else 0
                      end,*/
       CheckValue   = convert(money, (Limit*@Capital/100))        
       
--балансирующая позиция в рублях
--длинная и короткая
declare @SumLong money
select @SumLong=  (select sum(case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
                                       then round(f.RubLong/1000000,4)
                                       else round(round(f.RubLong,1)/1000,4)
                                  end)
                         from #Form f
                              inner join tSecurity         s    #M_NOLOCK_INDEX(XPKtSecurity)
                              on s.SecurityID = f.SecurityID
                              inner join tInstrumentGroup  ig   #M_NOLOCK_INDEX(XPKtInstrumentGroup)
                              on ig.InstrumentGroupID = s.InstrumentID
                        where 1=1)
select @SumLong = isnull(@SumLong,0)


declare @SumShort money
select  @SumShort =  (select sum(case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
                                        then round(f.RubShort/1000000,4)
                                        else round(round(f.RubShort,1)/1000,4) 
                                   end)
                          from #Form f
                               inner join tSecurity         s    #M_NOLOCK_INDEX(XPKtSecurity)
                               on s.SecurityID = f.SecurityID
                               inner join tInstrumentGroup  ig   #M_NOLOCK_INDEX(XPKtInstrumentGroup)
                               on ig.InstrumentGroupID = s.InstrumentID
                         where 1=1)
select @SumShort=isnull(@SumShort,0)

declare @BalLong money, 
        @BalShort money

if @SumLong > abs(@SumShort) 
select @BalShort=-1*(@SumLong+@SumShort), 
       @BalLong=0
else 
select @BalShort=0, 
       @BalLong =abs(@SumLong+@SumShort)

--ОВП в процентах от капитала
       
declare @SumOVPProc numeric(15,2)

select @SumOVPProc = convert(money,(@BalLong - @BalShort)*100.00/@Capital)              

--лимит ОВП в процентах от капитала

declare @LimitBal float

 select @LimitBal = convert(float,isnull(oc.Param,'20'))
   from tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where 1=1
    and oc.ObjType          = 2
    and oc.ParentID         = @ObjClassifierID
    and oc.Brief            = 'Бал'        
           

--сумма открытых валютных позиций

declare @SumOVPLong  money, 
        @SumOVPShort money    

select @SumOVPLong  = @BalLong + @SumLong, 
       @SumOVPShort = @BalShort + @SumShort
       
declare @SumAllProc money

select @SumAllProc = convert(money,@SumOVPLong*100.00/@Capital)

--лимит

declare @LimitSum float

 select @LimitSum = convert(float,isnull(oc.Param,'20'))
   from tObjClassifier  oc  #M_NOLOCK_INDEX(XAK1tDepClassifier)
  where 1=1
    and oc.ObjType          = 2
    and oc.ParentID         = @ObjClassifierID
    and oc.Brief            = 'Сум'        

declare  @TS     numeric(15,0)
 select @TS = cp.ID
   from tConfigParam cp #M_NOLOCK_INDEX(XAK0tConfigParam)
  where cp.SysName = 'COURSETYPE'      
     
create table #Scale(
                   SecurityID numeric(15,0),
                   Scale      int
                   )
insert #Scale

select distinct f.SecurityID,
       isnull(r.Value,1)
  from #Form            f,
       tRate            r  #M_NOLOCK_INDEX(XAK1tRate)
 where 1=1
    and r.RateType       = 1                     
    and r.InstitutionID  = @TS
    and r.ObjectID       = f.SecurityID
    and r.Date_Time = (select max(r2.Date_Time) 
                             from tRate        r2 #M_NOLOCK_INDEX(XAK1tRate)
                            where r2.ObjectID  = r.ObjectID 
                              and r2.RateType  = 1 
                              and r2.InstitutionID = @TS 
                              and convert(smalldatetime,convert(char(8),r2.Date_Time,112))<= @DateCourse)
declare @SumRubLong  money,
        @SumRubShort money
select  @SumRubLong = (select sum(case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
                                       then round(f.RubLong/1000000,4)
                                       else round(round(f.RubLong,1)/1000,4)
                                  end)
                         from #Form f
                              inner join tSecurity         s    #M_NOLOCK_INDEX(XPKtSecurity)
                              on s.SecurityID = f.SecurityID
                              inner join tInstrumentGroup  ig   #M_NOLOCK_INDEX(XPKtInstrumentGroup)
                              on ig.InstrumentGroupID = s.InstrumentID
                        where 1=1)
select  @SumRubShort = (select sum(case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
                                        then round(f.RubShort/1000000,4)
                                        else round(round(f.RubShort,1)/1000,4) 
                                   end)
                          from #Form f
                               inner join tSecurity         s    #M_NOLOCK_INDEX(XPKtSecurity)
                               on s.SecurityID = f.SecurityID
                               inner join tInstrumentGroup  ig   #M_NOLOCK_INDEX(XPKtInstrumentGroup)
                               on ig.InstrumentGroupID = s.InstrumentID
                         where 1=1)
         
    
select f.SecurityID                          as SecurityID,   
       f.SecBrief                            as SecBrief,   
       round(round(f.Bal,1)/1000,4)          as Bal,   
       round(round(f.BalOth,1)/1000,4)       as BalOth,   
       round(round(f.BalRes,1)/1000,4)       as BalRes,   
       round(round(f.Spot,1)/1000,4)         as Spot,   
       round(round(f.SpotOth,1)/1000,4)      as SpotOth,   
       round(round(f.Term,1)/1000,4)         as Term,   
       round(round(f.TermOth,1)/1000,4)      as TermOth,   
       round(round(f.Opt,1)/1000,4)          as Opt,   
       round(round(f.OptOth,1)/1000,4)       as OptOth,   
       round(round(f.Guar,1)/1000,4)         as Guar,   
       round(round(f.GuarOth,1)/1000,4)      as GuarOth,   
       --round(round(f.AggBal,1)/1000,4)       as AggBal,   
       round(round(f.Bal,1)/1000,4)+
       round(round(f.Spot,1)/1000,4)         as AggBal,
       round(round(f.AggOffBal,1)/1000,4)    as AggOffBal,   
       round(round(f.Procent,1)/1000,4)      as Procent,   
--       round(round(f.OpenPos,1)/1000,4)      as OpenPos,   
       round(round(f.Bal,1)/1000,4)+
       round(round(f.Spot,1)/1000,4)+
       round(round(f.AggOffBal,1)/1000,4)    as OpenPos,
       f.Course                              as Course,   
       case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
            then round(f.RubLong/1000000,4)
            else round(round(f.RubLong,1)/1000,4)
       end                                   as RubLong,   
       case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
            then round(f.RubShort/1000000,4)
            else round(round(f.RubShort,1)/1000,4) 
       end                                   as RubShort,   
       case when ltrim(rtrim(ig.Brief))= 'ДРАГМЕТ'
            then round(round(f.OpenProc,1)/1000,4)
            else round(f.OpenProc,4)         
       end                                   as OpenProc,
       --round(f.OpenProc,4)                   as OpenProc,   
       round(f.Limit,4)                      as Limit,   
       round(f.OpenOverProc,4)               as OpenOverProc, 
       0                                     as CheckValue,
       round(@Capital,4)                     as Capital,
       @Date                                 as Date,
       @DateCap                              as DateCap,
       @DateCourse                           as DateCourse,
       @BalLong                              as BalLong,
       @BalShort                             as BalShort,
       --@SumOVPProc                           as SumOVPProc,
       case when @BalShort = 0
            then (@BalLong/@Capital)*100
            else (abs(@BalShort)/@Capital)*100
       end                                   as SumOVPProc,
       
       case when ((case when @BalShort = 0
                        then (@BalLong/@Capital)*100
                        else (abs(@BalShort)/@Capital)*100
                   end) - @LimitBal)> 0
            then round(((case when @BalShort = 0
                             then (@BalLong/@Capital)*100
                             else (abs(@BalShort)/@Capital)*100
                   end) - @LimitBal),4)
            else 0           
       end                                   as OverBal,
       round(@LimitBal,4)                    as LimitBal,
       @SumOVPLong                           as SumOVPLong,
       @SumOVPShort                          as SumOVPShort,
       @SumAllProc                           as SumAllProc,
       round(@LimitSum,4)                    as LimitSum,
       
       case when (@SumAllProc - @LimitSum)> 0
            then (@SumAllProc - @LimitSum)
            else 0           
       end                                   as OverSum,
       @Reg6                                 as Reg6,
       case  @Reg6 when 0
                   then 'Декадная'
                   when 1
                   then 'Месячная'
                   else 'На внутримесячную дату'
       end                                   as Reg6Txt,
       case ig.Brief when 'ДРАГМЕТ'
                     then 1
                     else 2
       end                                   as ObEdMet,
       ltrim(rtrim(s.Number))                as SecNumber,
       ltrim(rtrim(s.Name))                  as SecName,
       case when ltrim(rtrim(ig.Brief))<> 'ДРАГМЕТ'
             and substring(s.Number,1,1) like char(37) + '[^0123456789]' + char(37)
            then 1
            else 0
       end                                   as KLR,
       isnull(sc.Scale,1)                    as Scale,
       @SumRubLong                           as SumRubLong,
       @SumRubShort                          as SumRubShort
       
 from #Form             f
      inner join tSecurity         s    #M_NOLOCK_INDEX(XPKtSecurity)
      on s.SecurityID = f.SecurityID
      inner join tInstrumentGroup  ig   #M_NOLOCK_INDEX(XPKtInstrumentGroup)
      on ig.InstrumentGroupID = s.InstrumentID
      left outer join #Scale sc
      on sc.SecurityID = f.SecurityID 
  
where 1=1
  
--select * from #Form      
#M_ISOLAT 

}

@SQL8@=SQL{

#M_FORCEPLAN

declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)

create table #ValType(
                     Number      int,
                     Brief       char(25)
                     )
                     
insert #ValType (Number, Brief) values (1, 'Балансовая')

insert #ValType (Number, Brief) values (2, 'Балансовая_Рубли')

insert #ValType (Number, Brief) values (3, 'Балансовая_Резервы')

insert #ValType (Number, Brief) values (4, 'Спот')

insert #ValType (Number, Brief) values (5, 'Спот_Рубли')

insert #ValType (Number, Brief) values (6, 'Срочная')

insert #ValType (Number, Brief) values (7, 'Срочная_Рубли')

insert #ValType (Number, Brief) values (8, 'Опционная')

insert #ValType (Number, Brief) values (9, 'Опционная_Рубли')

insert #ValType (Number, Brief) values (10, 'Гарантии')

insert #ValType (Number, Brief) values (11, 'Гарантии_Рубли')

insert #ValType (Number, Brief) values (14, 'СовВнеБалПоз_Проценты')

insert #ValType (Number, Brief) values (16, 'Курс')


declare @SampleID numeric(15,0)       
       
 select  @SampleID = SampleID    
   from  tSample     #M_NOLOCK_INDEX(XAK0tSample)
  where  Brief  =  'Форма634'
#M_ISOLAT

delete from pZFP where SPID = @@SPID   

insert pZFP(  SPID
              , SampleBrief   --Сокращение отчета
              , ExpBrief      --Сокращение финансового показателя
              , ExpName       --Наименование финансового показателя
              , ExpTypeNumber --Номер типа значения финансового показателя
              , ExpTypeName   --Наименование типа значения финансового показателя 
              , CalendarID    --Идентификатор календаря
              , ClsObjType    --Тип объекта классификатора
              , ClsMainBrief  --Сокращение раздела классификатора
              , ClsBrief      --Сокращение рубрики классификатора
              , ObjType       --Тип объекта финансового показателя
              , ObjectID      --Внешний идентификатор объекта: для счетов и клиентов - сокращение, для валют - номер
              , BranchBrief   --Сокращение филиала
              , ExponentDate  --Дата
              , ExponentValue --Значение показателя
              , ExpComment    --Комментарий показателя
             )
  select       SPID          = @@spid
              ,SampleBrief   = s.Brief
              ,ExpBrief      = sc.Brief
              ,ExpName       = sc.Brief
              ,ExpTypeNumber = #ValType.Number
              ,ExpTypeName   = #ValType.Brief
              ,CalendarID    = 1
              ,ClsObjType    = 0
              ,ClsMainBrief  = ''
              ,ClsBrief      = ''
              ,ObjType       = 1
              ,ObjectID      = 1
              ,BranchBrief   = i.Brief
              ,ExponentDate  = @DateStr
              ,ExponentValue = case 
                                 when #ValType.Number = 1  then #Form.Bal      
                                 when #ValType.Number = 2  then #Form.BalOth      
                                 when #ValType.Number = 3  then #Form.BalRes     
                                 when #ValType.Number = 4  then #Form.Spot               
                                 when #ValType.Number = 5  then #Form.SpotOth  
                                 when #ValType.Number = 6  then #Form.Term 
                                 when #ValType.Number = 7  then #Form.TermOth
                                 when #ValType.Number = 8  then #Form.Opt                
                                 when #ValType.Number = 9  then #Form.OptOth
                                 when #ValType.Number = 10 then #Form.Guar     
                                 when #ValType.Number = 11 then #Form.GuarOth     
                                 when #ValType.Number = 14 then #Form.Procent                  
                                 when #ValType.Number = 16 then #Form.Course                                                                                                                                                
                                 else $0
                                 end                            
              ,ExpComment    = 'form634'                   
    from tSample      s  #M_NOLOCK_INDEX(XPKtSample),
         #Form,
         tCurrency    sc #M_NOLOCK_INDEX(XPKtCurrency),   
         #ValType,
         tInstitution i  #M_NOLOCK_INDEX(XPKtInstitution),
         #Branch      b
   where 1=1
     and s.SampleID      = @SampleID
     and sc.CurrencyID   = #Form.SecurityID
     and i.InstitutionID = b.BranchID
          
if @Reg5 = 1

begin
#M_FORCEPLAN_OFF
     
exec ExponentSaveBatch 
         @ModifyMode   = 1,
         @AddAFPMode   = 1,
         @RollBackMode = 1,
         @BatchMode    = 0     
         
end         

select SPID           as SPID         ,            
       SampleBrief    as SampleBrief  ,
       ExpBrief       as ExpBrief     ,     
       ExpName        as ExpName      ,      
       ExpTypeNumber  as ExpTypeNumber,
       ExpTypeName    as ExpTypeName  ,  
       CalendarID     as CalendarID   ,   
       ClsObjType     as ClsObjType   ,   
       ClsMainBrief   as ClsMainBrief , 
       ClsBrief       as ClsBrief     ,     
       ObjType        as ObjType      ,      
       ObjectID       as ObjectID     ,     
       BranchBrief    as BranchBrief  ,  
       ExponentDate   as ExponentDate , 
       ExponentValue  as ExponentValue,
       ExpComment     as ExpComment   
  from pZFP
 where 1=1
   and SPID = @@SPID 

        
}       
        
        
@SQL7@=SQL{
        
#M_FORCEPLAN
        
declare @Date    smalldatetime,
        @DateCap smalldatetime,
        @Capital float,
        @Branch  numeric(15,0),
        @Reg3    tinyint,
        @Reg4    tinyint,
        @Reg5    tinyint,
        @Reg6    tinyint,
        @Del232  tinyint,
        @Svod    tinyint,
        @DateStr DSDAY_STR

 select @Date    = %Date!,
        @DateCap = %DateCap!,
        @Capital = %Capital!,
        @Branch  = %Branch!,
        @Reg6    = %Reg6!,
        @Reg3    = %Reg3!,
        @Reg4    = %Reg4!,
        @Reg5    = %Reg5!,        
        @Del232  = %Del232!,
        @Svod    = %Svod!

select @DateStr = convert(char(8), @Date, 112)

declare @OurDir  varchar(40),
        @OurBuch varchar(40)        
        
select @OurDir  = isnull(@OurDir, PR.FIOBrief),
       @OurBuch = isnull(@OurBuch, BG.FIOBrief)
  from tPost      p #M_NOLOCK,
       tUserPost up #M_NOLOCK_INDEX(XIE1tUserPost),
       tUser     PR #M_NOLOCK_INDEX(XPKtUser), 
       tUser     BG #M_NOLOCK_INDEX(XPKtUser)
 where p.Brief          = 'Ответственные'
   and up.PostID        = p.PostID
   and PR.UserID        =* up.UserID
   and PR.InstitutionID = 2000
   and PR.Priority      = 1 
   and BG.UserID        =* up.UserID
   and BG.InstitutionID = 2000
   and BG.Priority      = 2
#M_ISOLAT
#M_FORCEORDER

declare @Executor varchar(40),
        @Phone    varchar(20)

select @Executor = rtrim(Name),
       @Phone    = rtrim(Phone)
  from tUser #M_NOLOCK_INDEX(XAK0tUser)
 where Brief = #SUSER_NAME  
#M_ISOLAT

select @OurDir   as OurDir,
       @OurBuch  as OurBuch,
       @Executor as Executor,
       @Phone    as Phone       

}

@SQL4@=SQL{

drop table #Resultat
drop table #Balance
drop table #Classifier
drop table #Resource
drop table #ResourceRBR
drop table #Reste
drop table #Impure
drop table #ImpureClient
drop table #ImpureRBR
drop table #ImpurePOS
drop table #ImpureRests
drop table #Exclude
drop table #Guarantee
drop table #MonthEnd 
drop table #Scheisse 
drop table #Link
drop table #Pr

select 'drop'

}              
[Field]

@PS@=PrinterSetup{LANDSCAPE,15 , , , ,Courier New Cyr DS,4,Bold}
--@PL@=PageLayout{85}
--@PI@=PageInstruction{@PS@,@PL@}

@ObjectBrief.......@=Field{ObjectBrief,@s20}
@P@=Field{Position,@s3}
@S@=Field{SecNumber,@s3}
@Summe...........@=Field{Summe,@n-_18.2}
@D@=Field{Direction,@s3}
@Date....@=Field{Date,@d6b}
@F@=Field{Portfolio,@s3}

@BankName....................................................................................................@=Field{BankName,@s110}
@Address.........................................................................................................................@=Field{Address,@s130}
@BIC.....@=Field{BIC,@s10}
@OKPO.....@=Field{OKPO,@s11}
@SOATO......@=Field{SOATO,@s13}
@RegNumber..@=Field{RegNumber,@s13,WRAP}
@MainRegNo..@=Field{MainRegNo,@s13,WRAP}

@RF_VPR_1@=ReportFilter{Reg4=0,@REPF@}
@RF_VDET_1@=ReportFilter{Reg4=1,@REPF@}
@RF_VFP_1@=ReportFilter{Reg4=2,@REPF@} 
@RF_SFP_1@=ReportFilter{Reg5=1,@REPF@} 

@RF_ZBD_1@=ReportFilter{Reg3=0,@REPF@}
@RF_ZFP_1@=ReportFilter{Reg3=1,@REPF@}
@RF_VK_1@=ReportFilter{Reg4=3,@REPF@}

@Reg6@=Field{Reg6,@n1}
@Reg6Txt.............@=Field{Reg6Txt,@s22}

@C@=Field{,@n_3,CNT}

@SecurityID.......@=Field{SecurityID,@n-_19.3}
@SecBrief...@=Field{SecBrief,@s13,WRAP}
@Bal..........@=Field{Bal,@n-_15.4}
@BalOth.......@=Field{BalOth,@n-_15.4}
@BalRes.......@=Field{BalRes,@n-_15.4}
@Spot.........@=Field{Spot,@n-_15.4}
@SpotOth......@=Field{SpotOth,@n-_15.4}
@Term.........@=Field{Term,@n-_15.4}
@TermOth......@=Field{TermOth,@n-_15.4}
@Opt..........@=Field{Opt,@n-_15.4}
@OptOth.......@=Field{OptOth,@n-_15.4}
@Guar.........@=Field{Guar,@n-_15.4}
@GuarOth......@=Field{GuarOth,@n-_15.4}
@AggBal.......@=Field{AggBal,@n-_15.4}
@AggOffBal....@=Field{AggOffBal,@n-_15.4}
@Procent......@=Field{Procent,@n-_15.4}
@OpenPos......@=Field{OpenPos,@n-_15.4}
@Course........@=Field{Course,@n-_16.4}
@RubLong......@=Field{RubLong,@n-_15.4}
@RubShort.....@=Field{RubShort,@n-_15.4}
@OpenProc.@=Field{OpenProc,@n-_11.4}
@Limit@=Field{Limit,@n-_7.4}
@OpenOvPrc@=Field{OpenOverProc,@n-_11.4}
@CheckValue...@=Field{CheckValue,@n-_15.4}
@BalLong......@=Field{BalLong,@n-_15.4,NONE}
@BalShort.....@=Field{BalShort,@n-_15.4,NONE}
@SumOVPLong...@=Field{SumOVPLong,@n-_15.4,NONE}
@SumOVPShort..@=Field{SumOVPShort,@n-_15.4,NONE}
@SumOVPPrc@=Field{SumOVPProc,@n-_11.4,NONE}
@SumAllPrc@=Field{SumAllProc,@n-_11.4,NONE}
@Capital..........@=Field{Capital,@n-_19.4,NONE}
@LimBl@=Field{LimitBal,@n-_7.4,NONE}
@LimSm@=Field{LimitSum,@n-_7.4,NONE}
@OverB..@=Field{OverBal,@n-_9.4,NONE}
@OverS..@=Field{OverSum,@n-_9.4,NONE}

@OurDir@=Field{OurDir,@s40t}
@OurBuch@=Field{OurBuch,@s40t}
@Executor@=Field{Executor,@s40t}
@Phone@=Field{Phone,@s40t}

@SampleBrief.................@=Field{SampleBrief,@s30t}
@ExpBrief...............@=Field{ExpBrief,@s25t}
@ExpName.....................@=Field{ExpName,@s30t}
@ExpType@=Field{ExpTypeNumber,@n-_9t}
@ExpTypeName............@=Field{ExpTypeName,@s25t}
@CalendarID.......@=Field{CalendarID,@n-_19.3t}
@Cls@=Field{ClsObjType,@n-_5t}
@ClsMainBrief...........@=Field{ClsMainBrief,@s25t}
@ClsBrief...............@=Field{ClsBrief,@s25t}
@ObjType..........@=Field{ObjType,@n-_19.3t}
@ObjectID.........@=Field{ObjectID,@n-_19.3t}
@BranchBrief............@=Field{BranchBrief,@s25t}
@Expone@=Field{ExponentDate,@s8t}
@ExponentValue....@=Field{ExponentValue,@n-_19.4t}
@ExpComment.......@=Field{ExpComment,@s19t}
             
@DateCap.@=Field{DateCap,@d6b}

@SecName.........@=Field{SecName,@s18,WRAP}

//клико

@Date@=Field{Date,@d6.b}
@DateCap@=Field{DateCap,@d6.b}
@Capital@=Field{Capital,@n-_19.4t,NONE}
@LB@=Field{LimitBal,@n-_7.4t,NONE} 
@LS@=Field{LimitSum,@n-_7.4t,NONE} 
@ObEdMet@=Field{ObEdMet,@n1}
@SecNumber@=Field{SecNumber,@s5t}
@SecName@=Field{SecName,@s40t}
@Bal@=Field{Bal,@n-_15.4t}
@Spot@=Field{Spot,@n-_15.4t}
@Term@=Field{Term,@n-_15.4t}
@Opt@=Field{Opt,@n-_15.4t}
@Guar@=Field{Guar,@n-_15.4t}
@Procent@=Field{Procent,@n-_15.4t}
@AggBal@=Field{AggBal,@n-_15.4t}
@AggOffBal@=Field{AggOffBal,@n-_15.4t}
@OpenPos@=Field{OpenPos,@n-_15.4t}
@KLR@=Field{KLR,@n1}
@Course10@=Field{Course,@n-_16.10t}
@Course5@=Field{Course,@n-_16.5t}
@Scale@=Field{Scale,@n_5t}
@RubLong@=Field{RubLong,@n-_15.4t}
@RubShort@=Field{RubShort,@n-_15.4t}
@OpenProc@=Field{OpenProc,@n-_11.4t}
@Lim@=Field{Limit,@n-_7.4t}
@OpOvPrc@=Field{OpenOverProc,@n-_11.4t}
@CheckValue@=Field{CheckValue,@n-_15.4t}
@SecBrief@=Field{SecBrief,@s13t}
@DateCourse@=Field{DateCourse,@d6.b}
@BalOth@=Field{BalOth,@n-_15.4t}
@BalRes@=Field{BalRes,@n-_15.4t}
@SpotOth@=Field{SpotOth,@n-_15.4t}
@TermOth@=Field{TermOth,@n-_15.4t}
@OptOth@=Field{OptOth,@n-_15.4t}
@GuarOth@=Field{GuarOth,@n-_15.4t}
@SumRubLong@=Field{SumRubLong,@n-_15.4t}
@SumRubShort@=Field{SumRubShort,@n-_15.4t}
@BalLong@=Field{BalLong,@n-_15.4t}
@BalShort@=Field{BalShort,@n-_15.4t} 
@SumOVPLong@=Field{SumOVPLong,@n-_15.4t}
@SumOVPShort@=Field{SumOVPShort,@n-_15.4t}
@SumOVPPr@=Field{SumOVPProc,@n-_11.4t}   
@SumAllPr@=Field{SumAllProc,@n-_11.4t}   
@LBl@=Field{LimitBal,@n-_7.4t}
@OverB@=Field{OverBal,@n-_9.4t} 
@OverS@=Field{OverSum,@n-_9.4t} 
@LSm@=Field{LimitSum,@n-_7.4t}
@OvS@=Field{OverSum,@n-_9.4t}

--@AnsiToOem@=AnSiToOem{}
&&
#@TBL@
$T
$
&
#@RF_ZBD_1@
#@SQL1@
#@SQL2@
#@SQL9@
#@SQL10@
#@SQL11@
#@SQL12@
#@SQL13@
#@SQL14@
#@SQL15@
#@SQL16@
#@SQL17@
#@SQL18@
$T
$
&
#@RF_VPR_1@
#@PS@
#@SQL5@

                                                                                                                                                                                                                                                            Банковская отчетность
                                                                                                                                                                                                             Љ”””””””””””””””’”””””””””””””””””””””””””””””””””””””””””””””””””””Ї
                                                                                                                                                                                                             ЈКод территории Ј       Код кредитной организации (филиала)         Ј
                                                                                                                                                                                                             Ј   по ОКАТО    “”””””””””””’”””””””””””””’”””””””””””””’”””””””””””¤
                                                                                                                                                                                                             Ј               Ј  по ОКПО  Јосновной го- Јрегистраци-  Ј    БИК    Ј
                                                                                                                                                                                                             Ј               Ј           Јсударствен-  Јонный номер  Ј           Ј
                                                                                                                                                                                                             Ј               Ј           Јный регист-  Ј(/порядковый Ј           Ј
                                                                                                                                                                                                             Ј               Ј           Јрационный    Јномер)       Ј           Ј
                                                                                                                                                                                                             Ј               Ј           Јномер        Ј             Ј           Ј
                                                                                                                                                                                                             “”””””””””””””””•”””””””””””•”””””””””””””•”””””””””””””•”””””””””””¤
                                                                                                                                                                                                             Ј@SOATO......@  Ј@OKPO.....@Ј@MainRegNo..@Ј@RegNumber..@Ј@BIC.....@ Ј
                                                                                                                                                                                                             ђ”””””””””””””””‘”””””””””””‘”””””””””””””‘”””””””””””””‘”””””””””””‰
                                                  
                                                  
                                                                                                                                  ОТЧЕТ ОБ ОТКРЫТЫХ ВАЛЮТНЫХ ПОЗИЦИЯХ                      
                                       
                                                                                                                                    по состоянию за @Date....@
                                         
Наименование кредитной организации @BankName....................................................................................................@
                                   ______________________________________________________________________________________________________________
Почтовый адрес @Address.........................................................................................................................@
               __________________________________________________________________________________________________________________________________
               
                                                                                            
                                                                                                                             
$T
$
&
#@RF_VPR_1@
#@PS@
//#@PL@
#@SQL6@

                                                                                                                                                                                                                                                                 Код формы 0409634
                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                            @Reg6Txt.............@
                                                                                                                                                                                                                                                                            
Љ”””””’””””””””””””””””””’”””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””’””””””””””””””””””’”””””””””””””””””””””””””””””””’”””””””””””””””’””””””””””””””””’”””””””””””””””””””””””””””””””’”””””””””””’”””””””””””’”””””””””””’”””””””””””””””Ї
Ј Но- Ј   Наименование   Ј                Чистые позиции в иностранных валютах                           Ј   Совокупная     Ј          Совокупная           Ј    Открытые   Ј  Курсы (цены)  Ј     Рублевый эквивалент       Ј Открытые  Ј  Лимиты   Ј ПревышениеЈ  Контрольные  Ј
Ј мер Ј   иностранной    Ј                       и драгоценых металлах                                   Јбалансовая позицияЈ     внебалансовая позиция     Ј    валютные   Ј  Банка России, Ј  открытых позиций (тыс. руб.) Ј валютные  Ј  открытых Ј  лимитов  Ј    значения   Ј
Ј п/п Ј     валюты       Ј      тыс.ед. иностранной валюты или граммов драгоценного металла              Ј(тыс.ед.иностаннойЈ   (тыс.ед.иностанной валюты   Ј    позиции,   Ј(руб.за ед.ино- “”””””””””””””””’”””””””””””””””¤ позиции, вЈ  валютных Ј  открытых Ј    лимитов    Ј
Ј     Ј  (наименование   “”””””””””””””””’”””””””””””””””’”””””””””””””””’”””””””””””””””’”””””””””””””””¤валюты или граммовЈ   или граммов драгоценного    Ј тыс. ед. ино- Јстранной валюты Ј    длинные    Ј   короткие    Ј процентах Ј  позиций, Ј  валютных Ј    открытых   Ј
Ј     Ј   драгоценного   Ј  балансовая   Ј    "спот"     Ј    срочная    Ј   опционная   Ј по гарантиям  Ј   драгоценного   Ј           металла)            Јстранной валютыЈ   или грамм    Ј (со знаком +) Ј (со знаком -) Ј    от     Ј     в     Ј  позиций  Ј    валютных   Ј
Ј     Ј     металла)     Ј               Ј               Ј               Ј               Ј(банковским га-Ј      металла)    Ј                               Ј  или граммов  Ј  драгоценного  Ј               Ј               ЈсобственныхЈ процентах Јв процентахЈ    позиций,   Ј
“”””””•””””””””””””””””””¤               Ј               Ј               Ј               Ј рантиям, пору-Ј                  “”””””””””””””””’”””””””””””””””¤  драгоценного Ј    металла)    Ј               Ј               Ј  средств  Ј     от    Ј    от     Ј  в процентах  Ј
Ј     Ј                  Ј               Ј               Ј               Ј               Ј чительствам и Ј                  Ј     всего     Ј    в том      Ј    металла    Ј                Ј               Ј               Ј (капитала)ЈсобственныхЈсобственныхЈот собственных Ј
Ј     Ј                  Ј               Ј               Ј               Ј               Ј аккредитивам) Ј                  Ј               Ј    числе      Ј               Ј                Ј               Ј               Ј           Ј  средств  Ј  средств  Ј    средств    Ј
Ј     Ј                  Ј               Ј               Ј               Ј               Ј               Ј                  Ј               Ј по процентам  Ј               Ј                Ј               Ј               Ј           Ј (капитала)Ј (капитала)Ј   (капитала)  Ј
Ј     Ј                  Ј               Ј               Ј               Ј               Ј               Ј                  Ј               Ј               Ј               Ј                Ј               Ј               Ј           Ј           Ј           Ј               Ј
“”””””•””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””•”””””””””””•”””””””””””•”””””””””””””””¤
Ј  1  Ј      2           Ј      3        Ј       4       Ј       5       Ј       6       Ј       7       Ј        8         Ј       9       Ј      10       Ј      11       Ј       12       Ј       13      Ј       14      Ј     15    Ј     16    Ј    17     Ј      18       Ј
$@SecBrief...@
$T
#IF @Bal..........@=0.0000&@Spot.........@=0.0000&@Term.........@=0.0000&@Opt..........@=0.0000&@Guar.........@=0.0000&@Procent......@=0.0000
#THEN  
#ELSE
“”””””•””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””•”””””””””””•”””””””””””•”””””””””””””””¤
Ј@C@  Ј@SecName.........@Ј@Bal..........@Ј@Spot.........@Ј@Term.........@Ј@Opt..........@Ј@Guar.........@Ј@AggBal.......@   Ј@AggOffBal....@Ј@Procent......@Ј@OpenPos......@Ј@Course........@Ј@RubLong......@Ј@RubShort.....@Ј@OpenProc.@Ј@Limit@    Ј@OpenOvPrc@Ј@CheckValue...@Ј
“”””””•””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””””””•””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””•”””””””””””•”””””””””””•”””””””””””””””¤
Ј@C@.1Јв том числе       Ј               Ј               Ј               Ј               Ј               Ј        X         Ј       X       Ј       X       Ј       X       Ј        X       Ј       X       Ј       X       Ј     X     Ј     X     Ј     X     Ј      X        Ј
Ј     Јруб./@SecBrief...@Ј@BalOth.......@Ј@SpotOth......@Ј@TermOth......@Ј@OptOth.......@Ј@GuarOth......@Ј                  Ј               Ј               Ј               Ј                Ј               Ј               Ј           Ј           Ј           Ј               Ј
#ENDIF
$
$     
“”””””‘””””””””””””””””””‘”””””””””””””””‘”””””””””””””””‘”””””””””””””””‘”””””””””””””””‘”””””””””””””””‘””””””””””””””””””‘”””””””””””””””‘”””””””””””””””‘”””””””””””””””‘””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””•”””””””””””•”””””””””””•”””””””””””””””¤
ЈИтого во всех иностранныx валютах и драгоценных металлах                                                                                                                                    Ј@RubLong......@Ј@RubShort.....@Ј     X     Ј     X     Ј     X     Ј      X        Ј
“””””””””””””””””””””””””””””””””””””””””””””’”””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””•”””””””””””•”””””””””””•”””””””””””””””¤
ЈСобственные средства (капитал) на @DateCap.@ЈБалансирующая позиция в рублях                                                                                                                 Ј@BalLong......@Ј@BalShort.....@Ј@SumOVPPrc@Ј@LimBl@    Ј@OverB..@  Ј         0.0000Ј
Ј                                            “”””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””•”””””””””””””””•”””””””””””””””•”””””””””””•”””””””””””•”””””””””””•”””””””””””””””¤
Јсоставляют @Capital..........@ тыс.руб      ЈСумма открытых валютных позиций                                                                                                                Ј@SumOVPLong...@Ј@SumOVPShort..@Ј@SumAllPrc@Ј@LimSm@    Ј@OverS..@  Ј         0.0000Ј
ђ””””””””””””””””””””””””””””””””””””””””””””‘”””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””‘”””””””””””””””‘”””””””””””””””‘”””””””””””‘”””””””””””‘”””””””””””‘”””””””””””””””‰
&
#@RF_VPR_1@
#@PS@
#@SQL7@





Руководитель       @OurDir@

Главный бухгалтер  @OurBuch@

М.П.

Исполнитель        @Executor@

Телефон:           @Phone@
$T
$
&

#@RF_VPR_1@
#@PS@
#@SQL7@
Справочно

Љ”””””””””””””””””””””””””””””””””’”””””””””””””””””””””””””Ї
ЈНаименование драгоценного металлаЈСтоимость сделки, тыс.рубЈ
“”””””””””””””””””””””””””””””””””•”””””””””””””””””””””””””¤
Ј                                 Ј                         Ј
ђ”””””””””””””””””””””””””””””””””‘”””””””””””””””””””””””””‰
$T
$
Руководитель       @OurDir@

Главный бухгалтер  @OurBuch@

М.П.

Исполнитель        @Executor@

Телефон:           @Phone@
&
#@RF_VDET_1@
#@PS@
#@SQL3@
Детализация расчета Формы 634 на @Date....@

$@P@{TRUE}
$@S@
$@D@
Љ””””””””””””””””””””’”””””””””””””””””””””””””’”””””””””””””””””’””””””””””””””””””””’”””””””””””””””’”””””””””Ї
Ј Счет               Ј          Позиция        Ј       Валюта    Ј       Сумма        Ј      Ячейка   Ј ПортфельЈ
“””””””””””””””””””””•”””””””””””””””””””””””””•”””””””””””””””””•””””””””””””””””””””•”””””””””””””””•”””””””””¤
$T                                                                                                    
Ј@ObjectBrief.......@Ј@P@                      Ј@S@              Ј@Summe...........@  Ј @D@           Ј  @F@    Ј
$                                                                                                    
ђ””””””””””””””””””””‘”””””””””””””””””””””””””‘”””””””””””””””””‘””””””””””””””””””””‘”””””””””””””””‘”””””””””‰
  Итого:                                                          @Summe...........@
$
$
$
&
#@RF_VDET_1@
#@PS@
#@SQL31@


Детализация скорректированных сумм гарантий Формы 634 на @Date....@

$@P@{TRUE}
$@S@
$@D@
Љ””””””””””””””””””””’”””””””””””””””””””””””””’”””””””””””””””””’””””””””””””””””””””’”””””””””””””””’”””””””””Ї
Ј Счет               Ј          Позиция        Ј       Валюта    Ј       Сумма        Ј      Ячейка   Ј ПортфельЈ
“””””””””””””””””””””•”””””””””””””””””””””””””•”””””””””””””””””•””””””””””””””””””””•”””””””””””””””•”””””””””¤
$T                                                                                                    
Ј@ObjectBrief.......@Ј@P@                      Ј@S@              Ј@Summe...........@  Ј @D@           Ј  @F@    Ј
$                                                                                                    
ђ””””””””””””””””””””‘”””””””””””””””””””””””””‘”””””””””””””””””‘””””””””””””””””””””‘”””””””””””””””‘”””””””””‰
  Итого:                                                          @Summe...........@
$
$
$
&
#@RF_VFP_1@
#@SQL6@
#@SQL8@
$T
@SampleBrief.................@;@ExpBrief...............@;@ExpName.....................@;@ExpType@;@ExpTypeName............@;@CalendarID.......@;@Cls@;@ClsMainBrief...........@;@ClsBrief...............@;@ObjType..........@;@ObjectID.........@;@BranchBrief............@;@Expone@;@ExponentValue....@;@ExpComment.......@
$
&
#@RF_SFP_1@
#@SQL6@
#@SQL8@
$T
$
&
#@AnsiToOem@
#@RF_VK_1@
#@SQL6@
#IF @Reg6@=0     //декадная
#THEN
<F634_K1>
"","@Date@"      
"@Capital@",""
"","@DateCap@"
"@LB@",""
"@LS@",""
"0",""
#ELSEIF @Reg6@=1 //месячная
#THEN
<F634_K2>
"@Capital@",""
"","@DateCap@"
"@LB@",""
"@LS@",""
"0",""
#ELSE
<F634_K3>            //на внутримесячную дату
"","@Date@"      
"@Capital@",""
"","@DateCap@"
"@LB@",""
"@LS@",""
"0",""
"","","Внутримесячная"
"","","Внутримесячная"
#ENDIF
$T
$
&
#@AnsiToOem@
#@RF_VK_1@
#@SQL6@
#IF @Reg6@=0
#THEN
<F634_V1>
#ELSEIF @Reg6@=1
#THEN
<F634_V2>
#ELSE
<F634_V3>
#ENDIF
$T
#IF @ObEdMet@=2
#THEN
#IF @KLR@=0
#THEN
"@SecNumber@","@SecName@","@Bal@","","@Spot@","@Term@","@Opt@","@Guar@","@Procent@","@AggBal@","@AggOffBal@","@Procent@","@OpenPos@","@Course10@","@Course5@","@Scale@","@RubLong@","@RubShort@","@OpenProc@","@Lim@","@OpOvPrc@","@CheckValue@","@SecBrief@","@DateCourse@","1","1",""
#ELSE
"@SecNumber@","@SecName@","@Bal@","","@Spot@","@Term@","@Opt@","@Guar@","@Procent@","@AggBal@","@AggOffBal@","@Procent@","@OpenPos@","@Course10@","@Course5@","@Scale@","@RubLong@","@RubShort@","@OpenProc@","@Lim@","@OpOvPrc@","@CheckValue@","KLR","","1","1",""
#ENDIF
"","в т.ч. руб./валюта","@BalOth@","@BalRes@","@SpotOth@","@TermOth@","@OptOth@","@GuarOth@","","","","","","","","","","","","","","","","","1","2",""
#ENDIF
$
&
#@AnsiToOem@
#@RF_VK_1@
#@SQL6@
#IF @Reg6@=0
#THEN
<F634_D1>
#ELSEIF @Reg6@=1
#THEN
<F634_D2>
#ELSE
<F634_D3>
#ENDIF
$T
#IF @ObEdMet@=1
#THEN
"@SecNumber@","@SecName@","@Bal@","","@Spot@","@Term@","@Opt@","","@Procent@","@AggBal@","@AggOffBal@","@Procent@","@OpenPos@","@Course10@","","","@RubLong@","@RubShort@","@OpenProc@","@Lim@","@OpOvPrc@","@CheckValue@","","@DateCourse@","1","1",""
"","в т.ч. руб./драгоценный металл","@BalOth@","@BalRes@","@SpotOth@","@TermOth@","@OptOth@","","","","","","","","","","","","","","","","","","1","2",""
#ENDIF
$
&
#@AnsiToOem@
#@RF_VK_1@
#@SQL6@
#IF @Reg6@=0
#THEN
<F634_S1>
#ELSEIF @Reg6@=1
#THEN
<F634_S2>
#ELSE
<F634_S3>
#ENDIF
"@SumRubLong@","@SumRubShort@","","","",""
"@BalLong@","@BalShort@","@SumOVPPr@","@LBl@","@OverB@","0.0000"
"@SumOVPLong@","@SumOVPShort@","@SumAllPr@","@LSm@","@OvS@","0.0000"
$T
$
//&
//#@SQL4@
//$T
//$
&&
&&
%Capital!=Param{Капитал банка (тыс. руб.), dtMoney, 0, , , , , , , 0, 0}
%Date!=Param{Введите дату отчета, dtDatetime, 0, , , , , , , 1, 1}
%InstitutionID!=Param{Краткое наименование контрагента, dtString, 10, TInstitution_T, tInstitution.Brief, InstitutionID, Финансовый институт, tInstitution, , 0, 0}
%Del232!=Param{Исключать 232-П по внебалансу, dtBit, 0, , , , , , , 0, 0}
%Reg3!=Param{Взять данные для построения отчета, dtBinary, 0, , , , , , из базы данных;из фин. показателей;, 0, 0}
%Reg4!=Param{Форма представления отчета, dtBinary, 0, , , , , , печатная;расшифровка;фин. показатели;kliko;, 0, 0}
%Reg5!=Param{Сохранить в фин. показатели, dtBit, 0, , , , , , , 0, 0}
%DateCap!=Param{Дата расчета капитала, dtDatetime, 0, , , , , , , 0, 0}
%Svod!=Param{Сводный отчет, dtBit, 0, , , , , , , 0, 0}
%Reg6!=Param{Периодичность, dtBinary, 0, , , , , , декадная;месячная;на внутримесячные даты;, 1, 1}
%Branch!=Param{Филиалы, dtString, 30, TBranch_TL, Branch.Brief, InstitutionID, Филиал, Branch, NotShowDivision=1;, 1, 1}
%A!=Param{Ставка РВПС по пластику для акционеров,dtFloat,0, , , , , , ,1,0}
%I!=Param{Ставка РВПС по пластику для инсайдеров,dtFloat,0, , , , , , ,1,0}
%Reg7!=Param{Приводить резервы по курсу на дату, dtBinary, 0, , , , , , расчета;последний раб. день месяца;, 0, 0}
